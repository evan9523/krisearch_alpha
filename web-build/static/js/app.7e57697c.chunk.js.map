{"version":3,"sources":["src/utils/getSmallString.ts","src/components/Card.tsx","src/components/SearchBar.tsx","src/components/ScrollHeader.tsx","src/utils/hideNumber.ts","src/screens/HomeScreen.tsx","src/components/Modal.tsx","src/screens/ProfileScreen.tsx","src/screens/SearchScreen.tsx","App.tsx","assets/newlogo.png"],"names":["getSmallString","str","length","substring","Card","props","name","avatar","crop","phone","address","onPress","cropAvatar","windowWidth","Dimensions","get","width","TouchableOpacity","View","style","height","backgroundColor","borderWidth","borderColor","borderRadius","alignItems","margin","marginBottom","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation","Image","source","uri","Text","fontWeight","marginTop","flexDirection","justifyContent","Entypo","size","top","SearchBar","visible","onHit","tapper","holderValue","isFocused","useState","newdata","alignSelf","padding","TextInput","Platform","OS","outlineColor","fontSize","onFocus","placeholder","autoFocus","editable","onChangeText","text","a","toLowerCase","console","log","setting","typer","Data","map","item","cIndex","push","type","i","b","includes","SimpleLineIcons","color","ScrollHeader","headerTap","scrolled","headHolder","require","hideNumber","toString","split","splice","Home","navigation","isLoading","crops","farmer","setfarmer","windowHeight","modalizeRef","useRef","modalData","newHeight","navigate","ScrollView","contentContainerStyle","flexWrap","showsVerticalScrollIndicator","bounces","Farmers","key","id","current","open","onOpen","image","ref","modalHeight","threshold","modalStyle","closeOnOverlayTap","mod","close","onClose","marginRight","Feather","marginLeft","Crops","cropName","localeCompare","harvestDate","area","quantity","alert","FontAwesome5","FontAwesome","position","overlayColor","floatingIcon","React","cloneElement","onPressMain","StyleSheet","create","container","flex","Modal","showModal","childrenStyle","Profile","styles","alignContent","Button","title","Search","blur","setblur","term","setterm","placer","setplacer","filteredCrops","filter","toLocaleLowerCase","filteredFarmers","gender","KeyboardAvoidingView","tint","intensity","absoluteFill","nonBlurredContent","dynamic","setSearch","right","AntDesign","Tab","createBottomTabNavigator","Stack","createStackNavigator","HomeTabs","Navigator","screenOptions","route","tabBarIcon","focused","iconName","tabBarOptions","activeTintColor","inactiveTintColor","showLabel","bottom","Screen","component","App","NavigationContainer","linking","prefixes","config","screens","Root","path","initialRouteName","Details","fallback","headerShown","module","exports"],"mappings":"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","file":"static/js/app.7e57697c.chunk.js","sourcesContent":["export function getSmallString(str : string){\n    if(str.length>20){\n        str =str.substring(0,19)+\"...\";\n        return str;\n    }\n    else{\n        return str\n    }\n}\n\n","import { Entypo, MaterialIcons, SimpleLineIcons } from \"@expo/vector-icons\";\nimport React from \"react\";\nimport {\n  Button,\n  StyleSheet,\n  Text,\n  TextInput,\n  View,\n  TouchableOpacity,\n  Dimensions,\n  Image,\n} from \"react-native\";\nimport { getSmallString } from \"../utils/getSmallString\";\n\nexport interface CardProps {\n  name: string;\n  avatar?: string;\n  crop?: string;\n  phone?: number;\n  address?: string;\n  onPress: any;\n  cropAvatar?: string;\n}\n\nexport default function Card(props: CardProps) {\n  const { name, avatar, crop, phone, address, onPress, cropAvatar } = props;\n\n  const windowWidth = Dimensions.get(\"window\").width;\n  const cardWidth = windowWidth / 2 - 30;\n\n  return (\n    <TouchableOpacity onPress={() => onPress()}>\n      <View\n        style={\n          windowWidth > 767\n            ? {\n                width: 200,\n                height: 185,\n                backgroundColor: \"#fff\",\n                borderWidth: 1,\n                borderColor: \"#fff\",\n                borderRadius: 10,\n                alignItems: \"center\",\n                margin: 5,\n                marginBottom: 5,\n                shadowColor: \"#98A0FF\",\n                shadowOffset: {\n                  width: 0,\n                  height: 3,\n                },\n                shadowOpacity: 0.15,\n                shadowRadius: 2.22,\n\n                elevation: 3,\n              }\n            : {\n                width: windowWidth * 0.45,\n                height: 185,\n                backgroundColor: \"#fff\",\n                borderWidth: 1,\n                borderColor: \"#fff\",\n                borderRadius: 10,\n                alignItems: \"center\",\n                margin: 5,\n                marginBottom: 5,\n                shadowColor: \"#98A0FF\",\n                shadowOffset: {\n                  width: 0,\n                  height: 3,\n                },\n                shadowOpacity: 0.15,\n                shadowRadius: 2.22,\n\n                elevation: 3,\n              }\n        }\n      >\n        <Image\n          source={{ uri: avatar }}\n          style={{\n            width: 100,\n            height: 100,\n            borderWidth: 1,\n            borderColor: \"#fff\",\n            borderRadius: 100,\n          }}\n        />\n        <Text style={{ fontWeight: \"500\", marginTop: 10 }}>\n          {getSmallString(name)}\n        </Text>\n        <View\n          style={{\n            flexDirection: \"row\",\n            justifyContent: \"space-evenly\",\n            alignItems: \"center\",\n            marginTop: 10,\n          }}\n        >\n          <View\n            style={{\n              flexDirection: \"row\",\n              alignItems: \"center\",\n              justifyContent: \"center\",\n            }}\n          >\n            <Image\n              source={{ uri: cropAvatar }}\n              style={{\n                height: 15,\n                width: 15,\n                borderColor: \"green\",\n                borderWidth: 1,\n                borderRadius: 15,\n              }}\n            />\n            <Text> {crop}</Text>\n          </View>\n          <Entypo name=\"dot-single\" size={15} style={{ top: 10 }} />\n          <View>\n            <Text>{address}</Text>\n          </View>\n        </View>\n        <View>\n          <Text>{phone}</Text>\n        </View>\n      </View>\n    </TouchableOpacity>\n  );\n}\n","import { SimpleLineIcons } from \"@expo/vector-icons\";\nimport React, { useState } from \"react\";\nimport {\n  Button,\n  StyleSheet,\n  Text,\n  TextInput,\n  View,\n  TouchableOpacity,\n  Platform,\n  FlatList,\n  ActivityIndicator,\n} from \"react-native\";\nimport Data from \"../data/items.json\";\nimport Farmer from \"../data/farmers.json\";\n\nexport interface SearchProps {\n  visible?: boolean;\n  tapper?: boolean;\n  onHit(): any;\n  isFocused?: boolean;\n  holderValue?: string;\n}\n\nfunction SearchBar(props: SearchProps) {\n  const { visible, onHit, tapper, isFocused, holderValue } = props;\n\n  const [sugg, setsugg] = useState(false);\n  const newdata = [];\n\n  function renderAll(a = []) {\n    for (let i = 0; i < a.length; i++) {\n      return (\n        <View style={{ width: \"100%\", height: 50, backgroundColor: \"yellow\" }}>\n          <Text>{a[i]}</Text>\n        </View>\n      );\n    }\n  }\n\n  return (\n    <View\n      style={{\n        backgroundColor: tapper ? \"#fff\" : \"transparent\",\n        height: \"80%\",\n      }}\n    >\n      <View\n        style={{\n          backgroundColor: \"#fff\",\n          height: 55,\n          width: \"100%\",\n          alignSelf: \"center\",\n          flexDirection: \"row\",\n          alignItems: \"center\",\n          justifyContent: \"space-between\",\n          borderRadius: 8,\n          padding: 5,\n          shadowColor: \"#98A0FF\",\n          shadowOffset: {\n            width: 0,\n            height: 4,\n          },\n          shadowOpacity: 0.32,\n          shadowRadius: 5.46,\n\n          elevation: 9,\n        }}\n      >\n        {/* <TextInput style={{height:40, backgroundColor:\"white\", width:\"75%\", padding:5, outline}} placeholder=\"Search for crops...\" autoFocus={true}/> */}\n        <TextInput\n          style={\n            Platform.OS === \"web\" && {\n              outlineColor: \"#fff\",\n              height: 40,\n              backgroundColor: \"white\",\n              width: \"75%\",\n              padding: 5,\n              fontSize: 20,\n            }\n          }\n          onFocus={onHit}\n          placeholder={holderValue}\n          autoFocus={visible}\n          editable={visible}\n          onChangeText={(text) => {\n            let a = text.toLowerCase();\n            console.log(a);\n            var setting = [];\n            var typer = [];\n\n            {\n              {\n                Data.map((item, cIndex) => setting.push(item.name));\n              }\n            }\n\n            {\n              {\n                Data.map((item, cIndex) => typer.push(item.type));\n              }\n            }\n            console.log(setting);\n            for (let i = 0; i < setting.length; i++) {\n              var b = setting[i].toLowerCase();\n              var c = typer[i].toLowerCase();\n              var result = b.includes(a);\n\n              if (result == true) {\n                newdata.push(setting[i]);\n                console.log(\"New Data : \" + newdata);\n              } else {\n                null;\n              }\n            }\n          }}\n        />\n\n        <View style={{ flexDirection: \"row\", justifyContent: \"space-between\" }}>\n          <TouchableOpacity>\n            <View\n              style={{\n                width: 35,\n                height: 35,\n                borderColor: \"#8790FF\",\n                alignItems: \"center\",\n                justifyContent: \"center\",\n                backgroundColor: \"#3A48ED\",\n                borderRadius: 35,\n              }}\n            >\n              <SimpleLineIcons name=\"magnifier\" size={20} color=\"#fff\" />\n            </View>\n          </TouchableOpacity>\n        </View>\n      </View>\n      <View></View>\n    </View>\n  );\n}\n\nexport default SearchBar;\n","import { SimpleLineIcons } from \"@expo/vector-icons\";\nimport React, { useState } from \"react\";\nimport {\n  Button,\n  StyleSheet,\n  Text,\n  TextInput,\n  View,\n  TouchableOpacity,\n  Platform,\n  Image,\n} from \"react-native\";\nimport SearchBar from \"./SearchBar\";\n\nexport interface ScrollHeaderProps {\n  scrolled?: boolean;\n  visible?: boolean;\n  headerTap(): any;\n  headHolder?: string;\n}\n\nfunction ScrollHeader(props: ScrollHeaderProps) {\n  const [sugg, setsugg] = useState(null);\n  const { scrolled, visible, headerTap, headHolder } = props;\n\n  return (\n    <View\n      style={{\n        width: \"100%\",\n        height: 100,\n        alignItems: \"center\",\n        alignSelf: \"center\",\n        flexDirection: \"column\",\n        justifyContent: \"space-evenly\",\n      }}\n    >\n      <View style={{ marginTop: 40, alignItems: \"center\" }}>\n        <Image\n          source={require(\"../../assets/newlogo.png\")}\n          style={{ width: 100, height: 50 }}\n        />\n      </View>\n      <Text style={{ padding: 5, fontWeight: \"400\", marginTop: -10 }}>\n        Discover the ones who grow our food. Connect with them personally.\n      </Text>\n      <View style={{ marginTop: 5, width: \"100%\" }}>\n        <SearchBar onHit={headerTap} holderValue={headHolder} />\n      </View>\n    </View>\n  );\n}\n\nexport default ScrollHeader;\n","export function hideNumber(phone : number){\n    var a=[];\n    var b;\n    var c;\n    var newString=[];\n    let i=0;\n\n    a = phone.toString().split('');\n    console.log(a)\n    a.splice(1,0,\"X\");\n    a.splice(3,2,\"X\");\n    a.splice(6,5,\"X\");\n    a.splice(1,0,\"X\");\n   \n    console.log('New A'+a)\n    return a;\n\n    \n\n\n}","import { BlurView } from \"expo-blur\";\nimport React, { useRef, useState } from \"react\";\nimport {\n  StyleSheet,\n  Text,\n  View,\n  Image,\n  Button,\n  TouchableOpacity,\n  ScrollView,\n  FlatList,\n  Dimensions,\n  TextInput,\n  Platform,\n  ActivityIndicator,\n} from \"react-native\";\nimport Card from \"../components/Card\";\nimport { Modal } from \"../components/Modal\";\nimport ScrollHeader from \"../components/ScrollHeader\";\nimport SearchBar from \"../components/SearchBar\";\nimport Farmers from \"../data/farmers.json\";\nimport Crops from \"../data/items.json\";\nimport { Modalize } from \"react-native-modalize\";\nimport {\n  Entypo,\n  Feather,\n  FontAwesome,\n  FontAwesome5,\n  Ionicons,\n  SimpleLineIcons,\n} from \"@expo/vector-icons\";\nimport { getSmallString } from \"../utils/getSmallString\";\nimport { hideNumber } from \"../utils/hideNumber\";\nimport Data from \"../data/items.json\";\nimport { FloatingAction } from \"react-native-floating-action\";\n\nexport function Home({ navigation }) {\n  const [showdata, setshowdata] = useState(false);\n  const [showHeader, setshowHeader] = useState(false);\n  const [search, setsearch] = useState({\n    isLoading: true,\n    crops: [],\n  });\n  const [farmer, setfarmer] = useState(0);\n\n  const [homeBlur, sethomeBlur] = useState(false);\n  const windowHeight = Dimensions.get(\"window\").height;\n  const windowWidth = Dimensions.get(\"window\").width;\n  const modalizeRef = useRef<Modalize>(null);\n\n  function renderCrops() {\n    return <Text>Hello</Text>;\n  }\n\n  const modalData = [];\n  function passData(id: number) {\n    {\n      Farmers.map((item, cIndex) => {\n        if (id == item.id) {\n          modalData.push(\n            item.id,\n            item.name,\n            item.address,\n            item.avatar,\n            item.crop,\n            item.phone\n          );\n\n          console.log(modalData);\n        } else {\n          return <Text>No Data found</Text>;\n        }\n      });\n    }\n  }\n  const onOpen = () => {\n    modalizeRef.current?.open();\n  };\n\n  const onClose = () => {\n    modalizeRef.current?.close();\n  };\n\n  const modalHeight = Dimensions.get(\"window\").height;\n  const newHeight = modalHeight * 0.86;\n\n  return (\n    <View style={{ height: windowHeight * 0.97, backgroundColor: \"#EAEAFF\" }}>\n      <View style={{ padding: 6, height: \"100%\" }}>\n        <ScrollHeader\n          headerTap={() => navigation.navigate(\"Search\")}\n          headHolder=\"Search for crops...\"\n        />\n        <Text\n          style={{\n            marginTop: 60,\n            padding: 5,\n            fontWeight: \"500\",\n            color: \"#6F6F6F\",\n          }}\n        >\n          Trending Farmers\n        </Text>\n\n        <ScrollView\n          contentContainerStyle={{\n            flexDirection: \"row\",\n            width: \"100%\",\n            flexWrap: \"wrap\",\n            height: \"100%\",\n            marginTop: 0,\n            alignItems: \"center\",\n            justifyContent: \"space-evenly\",\n          }}\n          showsVerticalScrollIndicator={false}\n          bounces={true}\n        >\n          {Farmers.map((item, cIndex) => {\n            return (\n              <Card\n                key={item.id}\n                name={item.name}\n                avatar={item.avatar}\n                phone={item.phone}\n                address={item.address}\n                crop={item.crop}\n                onPress={() => {\n                  setfarmer(item.id), onOpen(), passData(item.id);\n                }}\n                cropAvatar={item.image}\n              />\n            );\n          })}\n        </ScrollView>\n\n        <Modalize\n          ref={modalizeRef}\n          modalHeight={newHeight}\n          threshold={100}\n          modalStyle={\n            windowWidth > 767 ? { width: 500, alignSelf: \"center\" } : null\n          }\n          closeOnOverlayTap={true}\n          mod\n        >\n          {Farmers.map((item, cIndex) => {\n            let kisan = farmer;\n            if (kisan == item.id) {\n              return (\n                <View>\n                  <View\n                    style={{\n                      backgroundColor: \"#3A48ED\",\n                      width: \"100%\",\n                      height: 190,\n                      borderWidth: 1,\n                      top: -2,\n                      borderRadius: 15,\n                      borderColor: \"#3A48ED\",\n                      shadowColor: \"#000\",\n                      shadowOffset: {\n                        width: 0,\n                        height: 4,\n                      },\n                      shadowOpacity: 0.32,\n                      shadowRadius: 5.46,\n\n                      elevation: 9,\n                    }}\n                  >\n                    {/* <Text>{item.name}</Text>\n                        <Text>{item.address}</Text>\n                        <Image source={item.avatar} style={{height:50, width:50}}/>\n                   <Text>{farmer}</Text> */}\n                    <TouchableOpacity\n                      onPress={() => onClose()}\n                      style={{\n                        alignItems: \"center\",\n                        marginTop: 10,\n                        marginRight: 2,\n                        padding: 5,\n                        justifyContent: \"center\",\n                        alignSelf: \"flex-end\",\n                        backgroundColor: \"#9F99FF\",\n                        borderRadius: \"100%\",\n                        height: 35,\n                        width: 35,\n                      }}\n                    >\n                      <SimpleLineIcons name=\"close\" size={25} color=\"#fff\" />\n                    </TouchableOpacity>\n                    <View\n                      style={{\n                        flexDirection: \"row\",\n                        alignItems: \"center\",\n                        justifyContent: \"space-between\",\n                        padding: 2,\n                        top: -10,\n                      }}\n                    >\n                      <View\n                        style={{ width: \"40%\", height: \"100%\", padding: 5 }}\n                      >\n                        <Image\n                          source={{ uri: item.avatar }}\n                          style={{\n                            height: 120,\n                            width: 120,\n                            borderRadius: 120,\n                            borderColor: \"#fff\",\n                            borderWidth: 2,\n                          }}\n                        />\n                      </View>\n                      <View\n                        style={{\n                          flexDirection: \"column\",\n                          alignItems: \"center\",\n                          justifyContent: \"space-evenly\",\n                          width: \"60%\",\n                          height: \"100%\",\n                        }}\n                      >\n                        <View\n                          style={{\n                            flexDirection: \"column\",\n                            alignItems: \"flex-start\",\n                            width: \"100%\",\n                            height: \"100%\",\n                            justifyContent: \"space-evenly\",\n                          }}\n                        >\n                          <View style={{ flexDirection: \"row\" }}>\n                            <Feather name=\"user\" size={20} color=\"#fff\" />\n                            <Text\n                              style={{\n                                fontSize: 20,\n                                color: \"#fff\",\n                                fontWeight: \"700\",\n                                marginLeft: 5,\n                              }}\n                            >\n                              {getSmallString(item.name)}\n                            </Text>\n                          </View>\n                          <View style={{ flexDirection: \"row\" }}>\n                            <Feather name=\"map-pin\" size={20} color=\"#fff\" />\n                            <Text\n                              style={{\n                                fontSize: 20,\n                                color: \"#fff\",\n                                fontWeight: \"700\",\n                                marginLeft: 5,\n                              }}\n                            >\n                              {item.address}\n                            </Text>\n                          </View>\n                          <View style={{ flexDirection: \"row\" }}>\n                            <Feather name=\"user\" size={20} color=\"#fff\" />\n                            <Text\n                              style={{\n                                fontSize: 20,\n                                color: \"#fff\",\n                                fontWeight: \"700\",\n                                marginLeft: 5,\n                              }}\n                            >\n                              {hideNumber(item.phone)}\n                            </Text>\n                          </View>\n                        </View>\n                      </View>\n                    </View>\n                    <View style={{ top: -40 }}>\n                      <Text\n                        style={{\n                          marginTop: 60,\n                          padding: 5,\n                          fontWeight: \"500\",\n                          color: \"#6F6F6F\",\n                          fontSize: 20,\n                          marginLeft: 5,\n                        }}\n                      >\n                        Farming Details\n                      </Text>\n                      <View\n                        style={{\n                          width: \"95%\",\n                          alignSelf: \"center\",\n                          height: 1,\n                          backgroundColor: \"#C0C0C0\",\n                        }}\n                      ></View>\n                      <View\n                        style={{\n                          flexDirection: \"column\",\n                          marginTop: 10,\n                          padding: 10,\n                          height: 180,\n                          justifyContent: \"space-between\",\n                        }}\n                      >\n                        <View\n                          style={{\n                            flexDirection: \"row\",\n                            alignItems: \"center\",\n                            width: \"100%\",\n                            justifyContent: \"space-between\",\n                            marginBottom: 10,\n                          }}\n                        >\n                          <View\n                            style={{ flexDirection: \"column\", width: \"50%\" }}\n                          >\n                            <View\n                              style={{\n                                flexDirection: \"row\",\n                                alignItems: \"center\",\n                              }}\n                            >\n                              <Entypo name=\"leaf\" size={20} color=\"#9F99FF\" />\n                              <Text\n                                style={{\n                                  fontSize: 12,\n                                  color: \"#6F6F6F\",\n                                  fontWeight: \"600\",\n                                }}\n                              >\n                                Crop\n                              </Text>\n                            </View>\n                            <View>\n                              {Crops.map((cropName, cIndex) => {\n                                let a = cropName.name.toLowerCase();\n                                let b = item.crop?.toLowerCase();\n                                let result = a.localeCompare(b);\n\n                                if (a == b) {\n                                  return (\n                                    <View\n                                      style={{\n                                        flexDirection: \"row\",\n                                        alignItems: \"center\",\n                                      }}\n                                    >\n                                      <Image\n                                        source={{ uri: cropName.image }}\n                                        style={{\n                                          height: 30,\n                                          width: 30,\n                                          borderWidth: 1,\n                                          borderRadius: 30,\n                                          borderColor: \"#3ECF8E\",\n                                        }}\n                                      />\n                                      <Text\n                                        style={{ fontSize: 30, marginLeft: 5 }}\n                                      >\n                                        {cropName.name}\n                                      </Text>\n                                    </View>\n                                  );\n                                } else {\n                                  null;\n                                }\n                              })}\n                            </View>\n                          </View>\n\n                          <View\n                            style={{\n                              flexDirection: \"column\",\n                              width: \"50%\",\n                              alignItems: \"flex-end\",\n                            }}\n                          >\n                            <View\n                              style={{\n                                flexDirection: \"row\",\n                                alignItems: \"center\",\n                              }}\n                            >\n                              <SimpleLineIcons\n                                name=\"calendar\"\n                                size={20}\n                                color=\"#9F99FF\"\n                              />\n                              <Text\n                                style={{\n                                  fontSize: 12,\n                                  color: \"#6F6F6F\",\n                                  marginLeft: 5,\n                                  fontWeight: \"600\",\n                                }}\n                              >\n                                Harvest Date\n                              </Text>\n                            </View>\n                            <View>\n                              <Text style={{ fontSize: 30, marginLeft: 5 }}>\n                                {item.harvestDate}\n                              </Text>\n                            </View>\n                          </View>\n                        </View>\n                        <View\n                          style={{\n                            flexDirection: \"row\",\n                            alignItems: \"center\",\n                            width: \"100%\",\n                            justifyContent: \"space-between\",\n                            marginTop: 5,\n                          }}\n                        >\n                          <View\n                            style={{ flexDirection: \"column\", width: \"50%\" }}\n                          >\n                            <View\n                              style={{\n                                flexDirection: \"row\",\n                                alignItems: \"center\",\n                              }}\n                            >\n                              <SimpleLineIcons\n                                name=\"size-fullscreen\"\n                                size={20}\n                                color=\"#9F99FF\"\n                              />\n                              <Text\n                                style={{\n                                  fontSize: 12,\n                                  color: \"#6F6F6F\",\n                                  fontWeight: \"600\",\n                                  marginLeft: 5,\n                                }}\n                              >\n                                Farming Area\n                              </Text>\n                            </View>\n                            <View>\n                              <Text style={{ fontSize: 30 }}>\n                                {item.area} Kattha\n                              </Text>\n                            </View>\n                          </View>\n\n                          <View\n                            style={{\n                              flexDirection: \"column\",\n                              width: \"50%\",\n                              alignItems: \"flex-end\",\n                            }}\n                          >\n                            <View\n                              style={{\n                                flexDirection: \"row\",\n                                alignItems: \"center\",\n                              }}\n                            >\n                              <SimpleLineIcons\n                                name=\"speedometer\"\n                                size={20}\n                                color=\"#9F99FF\"\n                              />\n                              <Text\n                                style={{\n                                  fontSize: 12,\n                                  color: \"#6F6F6F\",\n                                  marginLeft: 5,\n                                  fontWeight: \"600\",\n                                }}\n                              >\n                                Quantity\n                              </Text>\n                            </View>\n                            <View>\n                              <Text style={{ fontSize: 30, marginLeft: 5 }}>\n                                {item.quantity} quintal\n                              </Text>\n                            </View>\n                          </View>\n                        </View>\n                        <View></View>\n                      </View>\n                      <View\n                        style={{\n                          width: \"95%\",\n                          alignSelf: \"center\",\n                          height: 1,\n                          backgroundColor: \"#C0C0C0\",\n                          marginTop: 10,\n                        }}\n                      />\n                    </View>\n                    <View\n                      style={{\n                        width: \"100%\",\n                        flexDirection: \"column\",\n                        top: -29,\n                        alignItems: \"center\",\n                      }}\n                    >\n                      <Text\n                        style={{\n                          fontSize: 15,\n                          color: \"#808080\",\n                          marginLeft: 5,\n                        }}\n                      >\n                        Coming soon\n                      </Text>\n                      <View\n                        style={{\n                          width: \"100%\",\n                          flexDirection: \"row\",\n                          alignItems: \"center\",\n                          justifyContent: \"space-evenly\",\n                          top: 5,\n                        }}\n                      >\n                        <TouchableOpacity\n                          style={{\n                            width: 120,\n                            height: 50,\n                            backgroundColor: \"#A9A9A9\",\n                            alignItems: \"center\",\n                            justifyContent: \"center\",\n                            flexDirection: \"row\",\n                            borderRadius: 10,\n                          }}\n                          onPress={() =>\n                            alert(\n                              \"Click to chat feature helps you connect directly to this farmer in one click. Feature Coming soon !\"\n                            )\n                          }\n                        >\n                          <FontAwesome5\n                            name=\"whatsapp\"\n                            size={25}\n                            color=\"#fff\"\n                          />\n                          <Text\n                            style={{\n                              fontSize: 20,\n                              color: \"#fff\",\n                              marginLeft: 5,\n                            }}\n                          >\n                            Chat\n                          </Text>\n                        </TouchableOpacity>\n                        <TouchableOpacity\n                          style={{\n                            width: 120,\n                            height: 50,\n                            backgroundColor: \"#fff\",\n                            alignItems: \"center\",\n                            justifyContent: \"center\",\n                            flexDirection: \"row\",\n                            borderRadius: 10,\n                            borderColor: \"#A9A9A9\",\n                            borderWidth: 2,\n                          }}\n                          onPress={() =>\n                            alert(\n                              \"Support the farmer by any kind. Feature Coming Soon !\"\n                            )\n                          }\n                        >\n                          <FontAwesome\n                            name=\"handshake-o\"\n                            size={25}\n                            color=\"#A9A9A9\"\n                          />\n                          <Text\n                            style={{\n                              fontSize: 20,\n                              color: \"#A9A9A9\",\n                              marginLeft: 5,\n                            }}\n                          >\n                            Support\n                          </Text>\n                        </TouchableOpacity>\n                      </View>\n                    </View>\n                  </View>\n                </View>\n              );\n            } else {\n              null;\n            }\n          })}\n        </Modalize>\n      </View>\n      {/* {homeBlur?(\n      <View style={{width:\"100%\", height:\"100%\",backgroundColor: 'rgba(0, 0, 0, 0.65)', position:\"absolute\"}}> \n       <BlurView tint=\"dark\" intensity={40} style={[StyleSheet.absoluteFill, styles.nonBlurredContent]}>\n        <View style={{marginTop:20,padding:5, height:\"100%\"}}>\n\n       <View style={{ backgroundColor:\"#fff\",height:55, width:\"100%\", alignSelf:\"center\", flexDirection:\"row\", alignItems:\"center\", justifyContent:\"space-between\", borderRadius:8, padding:5, shadowColor: \"#98A0FF\",\n        shadowOffset: {\n            width: 0,\n            height: 4,\n        },\n        shadowOpacity: 0.32,\n        shadowRadius: 5.46,\n        \n        elevation: 9,}}>\n            <TextInput style={Platform.OS === \"web\" && {outlineColor: \"#fff\",height:40, backgroundColor:\"white\", width:\"75%\", padding:5,fontSize:20 }}\n            placeholder=\"Search for crops...\" autoFocus={homeBlur}  editable={homeBlur}\n            onFocus={()=>navigation.navigate('Search')}\n            />\n        \n              \n\n       </View>\n       <View style={{flex:1,backgroundColor:\"transparent\"}}>\n                {search.isLoading?\n                <View style={{...StyleSheet.absoluteFill,alignItems:'center',justifyContent:'center'}}>\n                        <ActivityIndicator size=\"large\" color=\"blue\"/>\n                 </View> : null  \n                }\n               \n            </View>\n          \n          <TouchableOpacity onPress={()=>sethomeBlur(!homeBlur)}>\n                Press Me\n          </TouchableOpacity>\n        </View>\n      </BlurView>\n      </View>\n     \n    ):null} */}\n      <View\n        style={{\n          width: \"100%\",\n          backgroundColor: \"transparent\",\n          height: 50,\n          top: -42,\n        }}\n      >\n        <FloatingAction\n          position=\"center\"\n          overlayColor=\"transparent\"\n          color=\"#3A48ED\"\n          floatingIcon={React.cloneElement(\n            <SimpleLineIcons name=\"magnifier\" color=\"#fff\" size={30} />\n          )}\n          onPressMain={() => navigation.navigate(\"Search\")}\n        />\n      </View>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#EAEAFF\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n});\n","import React, { useRef } from \"react\";\nimport { View, Text, TouchableOpacity, Button, Dimensions } from \"react-native\";\nimport { Modalize } from \"react-native-modalize\";\n\nexport interface ModalProps {\n  showModal?: boolean;\n}\nexport const Modal = (props: ModalProps) => {\n  const modalizeRef = useRef<Modalize>(null);\n\n  const onOpen = () => {\n    modalizeRef.current?.open();\n  };\n\n  const onClose = () => {\n    modalizeRef.current?.close();\n  };\n\n  const modalHeight = Dimensions.get(\"window\").height;\n  const newHeight = modalHeight * 0.99;\n\n  const { showModal } = props;\n  return (\n    <>\n      <TouchableOpacity onPress={onOpen}>\n        <Text>Open the modal</Text>\n      </TouchableOpacity>\n\n      <Modalize\n        ref={modalizeRef}\n        modalHeight={newHeight}\n        threshold={100}\n        closeOnOverlayTap={true}\n        childrenStyle={{\n          flex: 1,\n          backgroundColor: \"#fff\",\n          alignItems: \"center\",\n          justifyContent: \"center\",\n        }}\n        modalStyle={{ backgroundColor: \"red\" }}\n      >\n        <TouchableOpacity onPress={() => onClose()}>\n          Press here\n        </TouchableOpacity>\n      </Modalize>\n    </>\n  );\n};\n","import React from \"react\";\nimport {\n  StyleSheet,\n  Text,\n  View,\n  Image,\n  Button,\n  TouchableOpacity,\n  ScrollView,\n} from \"react-native\";\nimport { Modal } from \"../components/Modal\";\n\nexport function Profile({ navigation }) {\n  return (\n    <ScrollView showsVerticalScrollIndicator={false}>\n      <View>\n        <View\n          style={[\n            styles.container,\n            {\n              justifyContent: \"center\",\n              alignContent: \"flex-start\",\n              padding: 10,\n            },\n          ]}\n        >\n          <Text>Krisearch</Text>\n        </View>\n        <View\n          style={{\n            width: \"100%\",\n            backgroundColor: \"red\",\n            padding: 5,\n            height: 60,\n            justifyContent: \"space-between\",\n            top: 20,\n            flexDirection: \"column\",\n          }}\n        >\n          <Text style={{ fontSize: 16, color: \"#3A48ED\" }}>Namaste</Text>\n          <Text style={{ fontSize: 16, color: \"#14142B\", fontWeight: \"bold\" }}>\n            Lets discover farmers\n          </Text>\n          <Button\n            title=\"GO to Search\"\n            onPress={() => navigation.navigate(\"Search\")}\n          />\n        </View>\n\n        <View style={{ marginTop: 50, padding: 6, height: \"100%\" }}>\n          <Text>We are in Profile</Text>\n          <Modal />\n        </View>\n      </View>\n    </ScrollView>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n});\n","import {\n  AntDesign,\n  Entypo,\n  Feather,\n  FontAwesome,\n  FontAwesome5,\n  SimpleLineIcons,\n} from \"@expo/vector-icons\";\nimport { BlurView } from \"expo-blur\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport {\n  StyleSheet,\n  Text,\n  View,\n  Image,\n  Button,\n  TouchableOpacity,\n  ScrollView,\n  Dimensions,\n  Platform,\n  KeyboardAvoidingViewComponent,\n  KeyboardAvoidingView,\n} from \"react-native\";\nimport { FloatingAction } from \"react-native-floating-action\";\nimport { TextInput } from \"react-native-gesture-handler\";\nimport Card from \"../components/Card\";\nimport ScrollHeader from \"../components/ScrollHeader\";\nimport SearchBar from \"../components/SearchBar\";\nimport Farmers from \"../data/farmers.json\";\nimport Data from \"../data/items.json\";\nimport { Modalize } from \"react-native-modalize\";\nimport { hideNumber } from \"../utils/hideNumber\";\nimport { getSmallString } from \"../utils/getSmallString\";\n\nconst windowHeight = Dimensions.get(\"window\").height;\nconst modalHeight = Dimensions.get(\"window\").height;\nconst newHeight = modalHeight * 0.86;\nconst windowWidth = Dimensions.get(\"window\").width;\nconst renderModal = windowHeight * 1.5;\n\nexport function Search({ navigation }) {\n  const [blur, setblur] = useState(true);\n  const [term, setterm] = useState(\"\");\n  const [placer, setplacer] = useState(false);\n  const [farmer, setfarmer] = useState(0);\n  const [openFilter, setopenFilter] = useState(false);\n  const [toggleCheckBox, setToggleCheckBox] = useState(false);\n  const [gender, setgender] = useState(\"\");\n\n  const setSearch = (text: string) => {\n    let dynamic = text.toLowerCase();\n    console.log(\"dynamic: \" + dynamic);\n  };\n\n  const filteredCrops = Data.filter((item) => {\n    return item.name.toLocaleLowerCase().includes(term.toLowerCase());\n  });\n\n  const filteredFarmers = Farmers.filter((item) => {\n    return item.crop.toLocaleLowerCase().includes(term.toLowerCase());\n  });\n\n  const genderFilter = filteredFarmers.filter((item) => {\n    return item.gender.toLocaleLowerCase().includes(term.toLowerCase());\n  });\n\n  const modalizeRef = useRef<Modalize>(null);\n\n  const onOpen = () => {\n    modalizeRef.current?.open();\n  };\n\n  const onOpenfilter = () => {\n    modalizeRef.current?.open();\n  };\n\n  const onClose = () => {\n    modalizeRef.current?.close();\n  };\n\n  return (\n    <View style={{ backgroundColor: \"red \", flexDirection: \"column\" }}>\n      <View style={{ height: windowHeight, backgroundColor: \"#EAEAFF\" }}>\n        <View style={{ padding: 6, height: \"100%\" }}>\n          <ScrollHeader\n            headerTap={() => setblur(!blur)}\n            headHolder={placer ? term : \"Search\"}\n          />\n          {placer ? (\n            <Text\n              style={{\n                marginTop: 60,\n                padding: 5,\n                fontWeight: \"500\",\n                color: \"#6F6F6F\",\n              }}\n            >\n              {filteredFarmers.length} results found for \"{term}\"\n            </Text>\n          ) : (\n            <Text\n              style={{\n                marginTop: 60,\n                padding: 5,\n                fontWeight: \"500\",\n                color: \"#6F6F6F\",\n              }}\n            >\n              Search\n            </Text>\n          )}\n          {/* {placer ? (\n            <TouchableOpacity\n              style={{ alignSelf: \"flex-end\", top: -23, width: 50, height: 20 }}\n              onPress={() => {\n                onOpenfilter();\n              }}\n            >\n              Filter\n            </TouchableOpacity>\n          ) : null} */}\n          <ScrollView\n            contentContainerStyle={{\n              flexDirection: \"row\",\n              width: windowWidth > 767 ? \"90%\" : \"100%\",\n              flexWrap: \"wrap\",\n              marginTop: 0,\n              alignItems: \"flex-start\",\n              alignSelf: \"center\",\n              justifyContent: \"flex-start\",\n            }}\n            showsVerticalScrollIndicator={false}\n            bounces={true}\n          >\n            {filteredFarmers.map((item, cIndex) => {\n              return (\n                <Card\n                  key={item.id}\n                  name={item.name}\n                  avatar={item.avatar}\n                  phone={item.phone}\n                  address={item.address}\n                  crop={item.crop}\n                  onPress={() => {\n                    setfarmer(item.id), onOpen();\n                  }}\n                  cropAvatar={item.image}\n                />\n              );\n            })}\n          </ScrollView>\n          <Modalize\n            ref={modalizeRef}\n            modalHeight={newHeight}\n            modalStyle={\n              windowWidth > 767 ? { width: 500, alignSelf: \"center\" } : null\n            }\n            threshold={100}\n            closeOnOverlayTap={true}\n            mod\n          >\n            {filteredFarmers.map((item, cIndex) => {\n              let kisan = farmer;\n              if (kisan == item.id) {\n                return (\n                  <View>\n                    <View\n                      style={{\n                        backgroundColor: \"#3A48ED\",\n                        width: \"100%\",\n                        height: 190,\n                        borderWidth: 1,\n                        top: -2,\n                        borderRadius: 15,\n                        borderColor: \"#3A48ED\",\n                        shadowColor: \"#000\",\n                        shadowOffset: {\n                          width: 0,\n                          height: 4,\n                        },\n                        shadowOpacity: 0.32,\n                        shadowRadius: 5.46,\n\n                        elevation: 11,\n                      }}\n                    >\n                      {/* <Text>{item.name}</Text>\n                        <Text>{item.address}</Text>\n                        <Image source={item.avatar} style={{height:50, width:50}}/>\n                   <Text>{farmer}</Text> */}\n                      <TouchableOpacity\n                        onPress={() => onClose()}\n                        style={{\n                          alignItems: \"center\",\n                          marginTop: 10,\n                          marginRight: 2,\n                          padding: 5,\n                          justifyContent: \"center\",\n                          alignSelf: \"flex-end\",\n                          backgroundColor: \"#9F99FF\",\n                          borderRadius: \"100%\",\n                          height: 35,\n                          width: 35,\n                        }}\n                      >\n                        <SimpleLineIcons name=\"close\" size={25} color=\"#fff\" />\n                      </TouchableOpacity>\n                      <View\n                        style={{\n                          flexDirection: \"row\",\n                          alignItems: \"center\",\n                          justifyContent: \"space-between\",\n                          padding: 2,\n                          top: -10,\n                        }}\n                      >\n                        <View\n                          style={{ width: \"40%\", height: \"100%\", padding: 5 }}\n                        >\n                          <Image\n                            source={{ uri: item.avatar }}\n                            style={{\n                              height: 120,\n                              width: 120,\n                              borderRadius: 120,\n                              borderColor: \"#fff\",\n                              borderWidth: 2,\n                            }}\n                          />\n                        </View>\n                        <View\n                          style={{\n                            flexDirection: \"column\",\n                            alignItems: \"center\",\n                            justifyContent: \"space-evenly\",\n                            width: \"60%\",\n                            height: \"100%\",\n                          }}\n                        >\n                          <View\n                            style={{\n                              flexDirection: \"column\",\n                              alignItems: \"flex-start\",\n                              width: \"100%\",\n                              height: \"100%\",\n                              justifyContent: \"space-evenly\",\n                            }}\n                          >\n                            <View style={{ flexDirection: \"row\" }}>\n                              <Feather name=\"user\" size={20} color=\"#fff\" />\n                              <Text\n                                style={{\n                                  fontSize: 20,\n                                  color: \"#fff\",\n                                  fontWeight: \"700\",\n                                  marginLeft: 5,\n                                }}\n                              >\n                                {getSmallString(item.name)}\n                              </Text>\n                            </View>\n                            <View style={{ flexDirection: \"row\" }}>\n                              <Feather name=\"map-pin\" size={20} color=\"#fff\" />\n                              <Text\n                                style={{\n                                  fontSize: 20,\n                                  color: \"#fff\",\n                                  fontWeight: \"700\",\n                                  marginLeft: 5,\n                                }}\n                              >\n                                {item.address}\n                              </Text>\n                            </View>\n                            <View style={{ flexDirection: \"row\" }}>\n                              <Feather name=\"user\" size={20} color=\"#fff\" />\n                              <Text\n                                style={{\n                                  fontSize: 20,\n                                  color: \"#fff\",\n                                  fontWeight: \"700\",\n                                  marginLeft: 5,\n                                }}\n                              >\n                                {hideNumber(item.phone)}\n                              </Text>\n                            </View>\n                          </View>\n                        </View>\n                      </View>\n                      <View style={{ top: -40 }}>\n                        <Text\n                          style={{\n                            marginTop: 60,\n                            padding: 5,\n                            fontWeight: \"500\",\n                            color: \"#6F6F6F\",\n                            fontSize: 20,\n                            marginLeft: 5,\n                          }}\n                        >\n                          Farming Details\n                        </Text>\n                        <View\n                          style={{\n                            width: \"95%\",\n                            alignSelf: \"center\",\n                            height: 1,\n                            backgroundColor: \"#C0C0C0\",\n                          }}\n                        ></View>\n                        <View\n                          style={{\n                            flexDirection: \"column\",\n                            marginTop: 10,\n                            padding: 10,\n                            height: 180,\n                            justifyContent: \"space-between\",\n                          }}\n                        >\n                          <View\n                            style={{\n                              flexDirection: \"row\",\n                              alignItems: \"center\",\n                              width: \"100%\",\n                              justifyContent: \"space-between\",\n                              marginBottom: 10,\n                            }}\n                          >\n                            <View\n                              style={{\n                                flexDirection: \"column\",\n                                width: \"50%\",\n                              }}\n                            >\n                              <View\n                                style={{\n                                  flexDirection: \"row\",\n                                  alignItems: \"center\",\n                                }}\n                              >\n                                <Entypo name=\"leaf\" size={20} color=\"#9F99FF\" />\n                                <Text\n                                  style={{\n                                    fontSize: 12,\n                                    color: \"#6F6F6F\",\n                                    fontWeight: \"600\",\n                                  }}\n                                >\n                                  Crop\n                                </Text>\n                              </View>\n                              <View>\n                                {Data.map((cropName, cIndex) => {\n                                  let a = cropName.name.toLowerCase();\n                                  let b = item.crop?.toLowerCase();\n                                  let result = a.localeCompare(b);\n\n                                  if (a == b) {\n                                    return (\n                                      <View\n                                        style={{\n                                          flexDirection: \"row\",\n                                          alignItems: \"center\",\n                                        }}\n                                      >\n                                        <Image\n                                          source={{ uri: cropName.image }}\n                                          style={{\n                                            height: 30,\n                                            width: 30,\n                                            borderWidth: 1,\n                                            borderRadius: 30,\n                                            borderColor: \"#3ECF8E\",\n                                          }}\n                                        />\n                                        <Text\n                                          style={{\n                                            fontSize: 30,\n                                            marginLeft: 5,\n                                          }}\n                                        >\n                                          {cropName.name}\n                                        </Text>\n                                      </View>\n                                    );\n                                  } else {\n                                    null;\n                                  }\n                                })}\n                              </View>\n                            </View>\n\n                            <View\n                              style={{\n                                flexDirection: \"column\",\n                                width: \"50%\",\n                                alignItems: \"flex-end\",\n                              }}\n                            >\n                              <View\n                                style={{\n                                  flexDirection: \"row\",\n                                  alignItems: \"center\",\n                                }}\n                              >\n                                <SimpleLineIcons\n                                  name=\"calendar\"\n                                  size={20}\n                                  color=\"#9F99FF\"\n                                />\n                                <Text\n                                  style={{\n                                    fontSize: 12,\n                                    color: \"#6F6F6F\",\n                                    marginLeft: 5,\n                                    fontWeight: \"600\",\n                                  }}\n                                >\n                                  Harvest Date\n                                </Text>\n                              </View>\n                              <View>\n                                <Text style={{ fontSize: 30, marginLeft: 5 }}>\n                                  {item.harvestDate}\n                                </Text>\n                              </View>\n                            </View>\n                          </View>\n                          <View\n                            style={{\n                              flexDirection: \"row\",\n                              alignItems: \"center\",\n                              width: \"100%\",\n                              justifyContent: \"space-between\",\n                              marginTop: 5,\n                            }}\n                          >\n                            <View\n                              style={{\n                                flexDirection: \"column\",\n                                width: \"50%\",\n                              }}\n                            >\n                              <View\n                                style={{\n                                  flexDirection: \"row\",\n                                  alignItems: \"center\",\n                                }}\n                              >\n                                <SimpleLineIcons\n                                  name=\"size-fullscreen\"\n                                  size={20}\n                                  color=\"#9F99FF\"\n                                />\n                                <Text\n                                  style={{\n                                    fontSize: 12,\n                                    color: \"#6F6F6F\",\n                                    fontWeight: \"600\",\n                                    marginLeft: 5,\n                                  }}\n                                >\n                                  Farming Area\n                                </Text>\n                              </View>\n                              <View>\n                                <Text style={{ fontSize: 30 }}>\n                                  {item.area} Kattha\n                                </Text>\n                              </View>\n                            </View>\n\n                            <View\n                              style={{\n                                flexDirection: \"column\",\n                                width: \"50%\",\n                                alignItems: \"flex-end\",\n                              }}\n                            >\n                              <View\n                                style={{\n                                  flexDirection: \"row\",\n                                  alignItems: \"center\",\n                                }}\n                              >\n                                <SimpleLineIcons\n                                  name=\"speedometer\"\n                                  size={20}\n                                  color=\"#9F99FF\"\n                                />\n                                <Text\n                                  style={{\n                                    fontSize: 12,\n                                    color: \"#6F6F6F\",\n                                    marginLeft: 5,\n                                    fontWeight: \"600\",\n                                  }}\n                                >\n                                  Quantity\n                                </Text>\n                              </View>\n                              <View>\n                                <Text style={{ fontSize: 30, marginLeft: 5 }}>\n                                  {item.quantity} quintal\n                                </Text>\n                              </View>\n                            </View>\n                          </View>\n                          <View></View>\n                        </View>\n                        <View\n                          style={{\n                            width: \"95%\",\n                            alignSelf: \"center\",\n                            height: 1,\n                            backgroundColor: \"#C0C0C0\",\n                            marginTop: 10,\n                          }}\n                        />\n                      </View>\n                      <View\n                        style={{\n                          width: \"100%\",\n                          flexDirection: \"column\",\n                          top: -29,\n                          alignItems: \"center\",\n                        }}\n                      >\n                        <Text\n                          style={{\n                            fontSize: 15,\n                            color: \"#808080\",\n                            marginLeft: 5,\n                          }}\n                        >\n                          Coming soon\n                        </Text>\n                        <View\n                          style={{\n                            width: \"100%\",\n                            flexDirection: \"row\",\n                            alignItems: \"center\",\n                            justifyContent: \"space-evenly\",\n                            top: 5,\n                          }}\n                        >\n                          <TouchableOpacity\n                            style={{\n                              width: 120,\n                              height: 50,\n                              backgroundColor: \"#A9A9A9\",\n                              alignItems: \"center\",\n                              justifyContent: \"center\",\n                              flexDirection: \"row\",\n                              borderRadius: 10,\n                            }}\n                            onPress={() =>\n                              alert(\n                                \"Click to chat feature helps you connect directly to this farmer in one click. Feature Coming soon !\"\n                              )\n                            }\n                          >\n                            <FontAwesome5\n                              name=\"whatsapp\"\n                              size={25}\n                              color=\"#fff\"\n                            />\n                            <Text\n                              style={{\n                                fontSize: 20,\n                                color: \"#fff\",\n                                marginLeft: 5,\n                              }}\n                            >\n                              Chat\n                            </Text>\n                          </TouchableOpacity>\n                          <TouchableOpacity\n                            style={{\n                              width: 120,\n                              height: 50,\n                              backgroundColor: \"#fff\",\n                              alignItems: \"center\",\n                              justifyContent: \"center\",\n                              flexDirection: \"row\",\n                              borderRadius: 10,\n                              borderColor: \"#A9A9A9\",\n                              borderWidth: 2,\n                            }}\n                            onPress={() =>\n                              alert(\n                                \"Support the farmer by any kind. Feature Coming Soon !\"\n                              )\n                            }\n                          >\n                            <FontAwesome\n                              name=\"handshake-o\"\n                              size={25}\n                              color=\"#A9A9A9\"\n                            />\n                            <Text\n                              style={{\n                                fontSize: 20,\n                                color: \"#A9A9A9\",\n                                marginLeft: 5,\n                              }}\n                            >\n                              Support\n                            </Text>\n                          </TouchableOpacity>\n                        </View>\n                      </View>\n                    </View>\n                  </View>\n                );\n              } else {\n                null;\n              }\n            })}\n          </Modalize>\n        </View>\n      </View>\n\n      <KeyboardAvoidingView>\n        <FloatingAction\n          position=\"center\"\n          overlayColor=\"transparent\"\n          color=\"#3A48ED\"\n          floatingIcon={React.cloneElement(\n            <SimpleLineIcons name=\"magnifier\" color=\"#fff\" size={30} />\n          )}\n          onPressMain={() => setblur(true)}\n        />\n      </KeyboardAvoidingView>\n\n      {blur ? (\n        <View\n          style={{\n            width: \"100%\",\n            height: \"100%\",\n            backgroundColor: \"rgba(0, 0, 0, 0.85)\",\n            position: \"absolute\",\n          }}\n        >\n          <BlurView\n            tint=\"dark\"\n            intensity={40}\n            style={[StyleSheet.absoluteFill, styles.nonBlurredContent]}\n          >\n            <View style={{ marginTop: 20, padding: 5, height: \"100%\" }}>\n              <View\n                style={{\n                  backgroundColor: \"#fff\",\n                  height: 55,\n                  width: \"97%\",\n                  alignSelf: \"center\",\n                  flexDirection: \"row\",\n                  alignItems: \"center\",\n                  justifyContent: \"space-between\",\n                  borderRadius: 8,\n                  padding: 20,\n                  shadowColor: \"#98A0FF\",\n                  shadowOffset: {\n                    width: 0,\n                    height: 4,\n                  },\n                  shadowOpacity: 0.32,\n                  shadowRadius: 5.46,\n\n                  elevation: 9,\n                }}\n              >\n                {/* <TextInput style={{height:40, backgroundColor:\"white\", width:\"75%\", padding:5, outline}} placeholder=\"Search for crops...\" autoFocus={true}/> */}\n                <TextInput\n                  style={\n                    Platform.OS === \"web\" && {\n                      outlineColor: \"#fff\",\n                      height: 40,\n                      backgroundColor: \"white\",\n                      width: \"95%\",\n                      padding: 5,\n                      fontSize: 20,\n                    }\n                  }\n                  placeholder=\"Search for Crops\"\n                  autoFocus={blur}\n                  editable={blur}\n                  onChangeText={(text) => {\n                    console.log(text), setterm(text), setSearch(text);\n                  }}\n                />\n                <View\n                  style={{\n                    flexDirection: \"row\",\n                    justifyContent: \"space-between\",\n                  }}\n                >\n                  <TouchableOpacity>\n                    <View\n                      style={{\n                        width: 25,\n                        height: 25,\n                        borderWidth: 2,\n                        borderColor: \"#A1C7FF\",\n                        alignItems: \"center\",\n                        alignSelf: \"flex-end\",\n                        justifyContent: \"center\",\n                        right: -10,\n                        backgroundColor: \"#A1C7FF\",\n                        borderRadius: 25,\n                      }}\n                    >\n                      <AntDesign\n                        name=\"close\"\n                        size={20}\n                        color=\"#3A48ED\"\n                        onPress={() => setblur(!blur)}\n                      />\n                    </View>\n                  </TouchableOpacity>\n                </View>\n              </View>\n              <View style={{ flex: 1, alignItems: \"center\", width: \"100%\" }}>\n                {/* <TouchableOpacity style={{width:\"100%\", height:30, alignItems:\"center\", justifyContent:\"center\", backgroundColor:\"transparent\"}} onPress={()=>{setplacer(true),setblur(!blur)}}>\n<Text>{term}</Text>\n</TouchableOpacity> */}\n                {term !== null ? (\n                  <View\n                    style={{\n                      width: \"97%\",\n                      alignItems: \"center\",\n                      backgroundColor: \"#fff\",\n                      borderRadius: 10,\n                      margin: 5,\n                    }}\n                  >\n                    {filteredCrops.map((item, cIndex) => {\n                      return (\n                        <TouchableOpacity\n                          onPress={() => {\n                            setplacer(true), setblur(!blur), setterm(item.name);\n                          }}\n                        >\n                          <View\n                            style={{\n                              width: Dimensions.get(\"window\").width - 50,\n                              height: 45,\n                              padding: 5,\n                              borderRadius: 8,\n                              flexDirection: \"row\",\n                              alignItems: \"center\",\n                              justifyContent: \"flex-start\",\n                              backgroundColor: \"#fff\",\n                              margin: 2,\n                            }}\n                          >\n                            <Image\n                              source={{ uri: item.image }}\n                              style={{\n                                height: 35,\n                                width: 35,\n                                borderColor: \"green\",\n                                borderWidth: 1,\n                                borderRadius: 35,\n                              }}\n                            />\n                            <Text style={{ fontSize: 20 }}> {item.name}</Text>\n                            <Text\n                              style={{\n                                fontSize: 15,\n                                alignSelf: \"center\",\n                                color: \"#989898\",\n                              }}\n                            >\n                              {\" \"}\n                              in{\" \"}\n                            </Text>\n                            <Text style={{ fontSize: 15, color: \"#3A48ED\" }}>\n                              {item.type}\n                            </Text>\n                          </View>\n                        </TouchableOpacity>\n                      );\n                    })}\n                  </View>\n                ) : null}\n              </View>\n            </View>\n\n            <View\n              style={{\n                width: \"100%\",\n                backgroundColor: \"transparent\",\n                height: 50,\n                alignItems: \"center\",\n                top: Dimensions.get(\"window\").height - 65,\n                position: \"absolute\",\n              }}\n            >\n              <FloatingAction\n                position=\"center\"\n                overlayColor=\"transparent\"\n                color=\"#3A48ED\"\n                floatingIcon={React.cloneElement(\n                  <SimpleLineIcons name=\"close\" color=\"#fff\" size={30} />\n                )}\n                onPressMain={() => navigation.navigate(\"Home\")}\n              />\n            </View>\n          </BlurView>\n        </View>\n      ) : null}\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n});\n","import { StatusBar } from \"expo-status-bar\";\nimport React, { useState } from \"react\";\nimport {\n  Button,\n  Dimensions,\n  StyleSheet,\n  Text,\n  TextInput,\n  View,\n  TouchableOpacity,\n  KeyboardAvoidingView,\n  Platform,\n} from \"react-native\";\nimport Data from \"../krisearch_alpha/src/data/items.json\";\nimport Farmer from \"../krisearch_alpha/src/data/farmers.json\";\n\nimport { Modal } from \"./src/components/Modal\";\nimport { BlurView } from \"expo-blur\";\nimport SearchBar from \"./src/components/SearchBar\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\nimport { Home } from \"./src/screens/HomeScreen\";\nimport { Feather, SimpleLineIcons } from \"@expo/vector-icons\";\nimport { Profile } from \"./src/screens/ProfileScreen\";\nimport { Search } from \"./src/screens/SearchScreen\";\nimport { FAB } from \"./src/components/FAB\";\nimport { FloatingAction } from \"react-native-floating-action\";\nimport homeStack from \"./src/routes/homeStack\";\n\nconst Tab = createBottomTabNavigator();\nconst Stack = createStackNavigator();\n\nconst windowWidth = Dimensions.get(\"window\").width;\n\nfunction MyTabBar({ state, descriptors, navigation }) {\n  const focusedOptions = descriptors[state.routes[state.index].key].options;\n\n  if (focusedOptions.tabBarVisible === false) {\n    return null;\n  }\n\n  return (\n    <View style={{ flexDirection: \"row\" }}>\n      {state.routes.map((route, index) => {\n        const { options } = descriptors[route.key];\n        const label =\n          options.tabBarLabel !== undefined\n            ? options.tabBarLabel\n            : options.title !== undefined\n            ? options.title\n            : route.name;\n\n        const isFocused = state.index === index;\n\n        const onPress = () => {\n          const event = navigation.emit({\n            type: \"tabPress\",\n            target: route.key,\n            canPreventDefault: true,\n          });\n\n          if (!isFocused && !event.defaultPrevented) {\n            navigation.navigate(route.name);\n          }\n        };\n\n        const onLongPress = () => {\n          navigation.emit({\n            type: \"tabLongPress\",\n            target: route.key,\n          });\n        };\n\n        return (\n          <TouchableOpacity\n            accessibilityRole=\"button\"\n            accessibilityState={isFocused ? { selected: true } : {}}\n            accessibilityLabel={options.tabBarAccessibilityLabel}\n            testID={options.tabBarTestID}\n            onPress={onPress}\n            onLongPress={onLongPress}\n            style={{\n              flex: 1,\n              backgroundColor: windowWidth > 767 ? \"#EAEAFF\" : \"white\",\n              alignItems: \"center\",\n              justifyContent: \"center\",\n              height: 25,\n            }}\n          ></TouchableOpacity>\n        );\n      })}\n    </View>\n  );\n}\n\n// function HomeTabs() {\n//   return (\n//     <Tab.Navigator\n//     tabBar={props => <MyTabBar {...props}/>}\n//     tabBarOptions={{ showLabel: false }}\n//     >\n//       <Tab.Screen name=\"Home\" component={Home} />\n//       <Tab.Screen name=\"Profile\" component={Profile} />\n//     </Tab.Navigator>\n//   );\n// }\nfunction HomeTabs() {\n  return (\n    <Tab.Navigator\n      screenOptions={({ route }) => ({\n        tabBarIcon: ({ focused, color, size }) => {\n          let iconName;\n\n          if (route.name === \"Home\") {\n            iconName = focused ? \"home\" : \"home\";\n          } else if (route.name === \"Profile\") {\n            iconName = focused ? \"user\" : \"user\";\n          }\n\n          // You can return any component that you like here!\n          return <Feather name={iconName} size={25} color={color} />;\n        },\n      })}\n      tabBarOptions={{\n        activeTintColor: \"#8790FF\",\n        inactiveTintColor: \"gray\",\n        showLabel: false,\n        style: {\n          height: 43,\n          width: windowWidth > 767 ? 90 : \"100%\",\n          bottom: windowWidth > 767 ? \"96%\" : 0,\n          backgroundColor: windowWidth > 767 ? \"#EAEAFF\" : \"#fff\",\n          shadowColor: \"#98A0FF\",\n          shadowOffset: {\n            width: 0,\n            height: -2,\n          },\n          shadowOpacity: 0.2,\n          shadowRadius: 5.46,\n\n          elevation: 9,\n        },\n      }}\n    >\n      <Tab.Screen name=\"Home\" component={Home} />\n      <Tab.Screen name=\"Profile\" component={Profile} />\n    </Tab.Navigator>\n  );\n}\n\nexport default function App({ navigation }) {\n  const [darkenbg, setdarkenbg] = useState(false);\n  const [hider, sethider] = useState(false);\n\n  return (\n    // <View style={styles.container}>\n    //   <Text>Open up App.tsx to start working on your app!</Text>\n    //   <Button title=\"click me\" onPress={()=>myfunc()}>\n\n    //   </Button>\n\n    //   <TextInput style={{width:\"100%\", backgroundColor:\"yellow\", height:50}} placeholder=\"Enter details\" onChangeText={(text)=>searchFarmers(text)}>\n\n    //   </TextInput>\n\n    //   <StatusBar style=\"auto\" />\n    // </View>\n\n    <NavigationContainer\n      linking={{\n        prefixes: [\"rne://127.0.0.1:19006/--/\"],\n        config: {\n          screens: {\n            Root: {\n              path: \"/\",\n              initialRouteName: \"/\",\n              screens: {\n                Home: \"/\",\n                Details: \"/details\",\n                Search: \"/search\",\n              },\n            },\n          },\n        },\n      }}\n      fallback={<Text>Loading...</Text>}\n    >\n      {/* <Button title =\"GO CORONA GO\" onPress={()=>navigation.navigate('Profile')}/> */}\n      <Stack.Navigator\n        screenOptions={{\n          headerShown: false,\n        }}\n      >\n        <Stack.Screen name=\"Home\" component={HomeTabs} />\n        <Stack.Screen name=\"Search\" component={Search} />\n      </Stack.Navigator>\n\n      {/* <FloatingAction overlayColor='none' buttonSize={70} showBackground onPressMain={()=>alert('PRessed')} position=\"center\" color=\"#fff\" floatingIcon={\n\n        <TouchableOpacity style={{backgroundColor:darkenbg?\"#3A48ED\":\"#fff\", width:\"100%\", height:\"100%\",alignItems:\"center\",justifyContent:\"center\", borderColor:\"#8790FF\", borderWidth:2,borderRadius:\"100%\"}}\n        \n        onPress={()=>setdarkenbg(!darkenbg)}\n        >\n   {!darkenbg?(\n              <SimpleLineIcons name=\"magnifier\" size={30} color=\"#3A48ED\"/>\n            ):(\n              <SimpleLineIcons name=\"close\" size={30} color=\"#fff\"/>\n            )}\n        </TouchableOpacity>\n      } /> */}\n      {/* <TouchableOpacity style={{height:80, width:80, alignItems:\"center\",justifyContent:\"center\",borderWidth:2, borderRadius:80,borderColor:darkenbg?\"#fff\":\"#8790FF\" ,backgroundColor:darkenbg?\"#3A48ED\":\"#fff\", position:\"absolute\",bottom:7, alignSelf:\"center\", zIndex:999}} onPress={()=>setdarkenbg(!darkenbg)}>\n          <View>\n            {!darkenbg?(\n              <SimpleLineIcons name=\"magnifier\" size={30} color=\"#3A48ED\"/>\n            ):(\n              <SimpleLineIcons name=\"close\" size={30} color=\"#fff\"/>\n            )}\n            \n          </View>\n          </TouchableOpacity>\n          {darkenbg?(\n      <View style={{width:\"100%\", height:\"100%\",backgroundColor: 'rgba(0, 0, 0, 0.65)', position:\"absolute\"}}> \n       <BlurView tint=\"dark\" intensity={40} style={[StyleSheet.absoluteFill, styles.nonBlurredContent]}>\n        <View style={{marginTop:20,padding:5, height:\"100%\"}}>\n\n          <SearchBar visible={darkenbg} />\n        </View>\n      </BlurView>\n      </View>\n     \n    ):null} */}\n      {/* <TouchableOpacity style={{height:80, width:80, alignItems:\"center\",justifyContent:\"center\",borderWidth:2, borderRadius:80,borderColor:!hider?\"#fff\":\"#8790FF\" ,backgroundColor:hider?\"#fff\":\"#3A48ED\", position:\"absolute\",bottom:7, alignSelf:\"center\", zIndex:999}} onPress={()=>sethider(!hider)}>\n    <View>\n            {hider?(\n              <SimpleLineIcons name=\"magnifier\" size={30} color=\"#3A48ED\"/>\n            ):(\n              <SimpleLineIcons name=\"close\" size={30} color=\"#fff\"/>\n            )}\n            \n          </View>\n          </TouchableOpacity> */}\n    </NavigationContainer>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n});\n","module.exports = __webpack_public_path__ + \"static/media/newlogo.a840e510.png\";"],"sourceRoot":""}
{"version":3,"sources":["src/utils/getSmallString.ts","src/components/Card.tsx","src/components/SearchBar.tsx","src/components/ScrollHeader.tsx","src/utils/hideNumber.ts","src/screens/HomeScreen.tsx","src/components/Modal.tsx","src/screens/ProfileScreen.tsx","src/screens/SearchScreen.tsx","App.tsx","assets/newlogo.png"],"names":["getSmallString","str","length","substring","Card","props","name","avatar","crop","phone","address","onPress","cropAvatar","isCrop","windowWidth","Dimensions","get","width","TouchableOpacity","View","style","height","backgroundColor","borderWidth","borderColor","borderRadius","alignItems","margin","marginBottom","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation","Image","source","uri","Text","fontWeight","marginTop","flexDirection","justifyContent","Entypo","size","top","SearchBar","visible","onHit","tapper","holderValue","isFocused","useState","newdata","alignSelf","padding","TextInput","Platform","OS","outlineColor","fontSize","onFocus","placeholder","autoFocus","editable","onChangeText","text","a","toLowerCase","console","log","setting","typer","Data","map","item","cIndex","push","type","i","b","includes","SimpleLineIcons","color","ScrollHeader","headerTap","scrolled","headHolder","require","hideNumber","toString","split","splice","Home","navigation","hideFAB","sethideFAB","isLoading","crops","farmer","setfarmer","windowHeight","modalizeRef","useRef","modalData","onClose","current","close","newHeight","navigate","ScrollView","contentContainerStyle","flexWrap","showsVerticalScrollIndicator","bounces","Farmers","key","id","open","onOpen","image","ref","modalHeight","threshold","modalStyle","closeOnOverlayTap","mod","marginRight","Feather","marginLeft","Crops","cropName","localeCompare","harvestDate","area","quantity","alert","FontAwesome5","FontAwesome","position","overlayColor","floatingIcon","React","cloneElement","onPressMain","StyleSheet","create","container","flex","Modal","showModal","childrenStyle","Profile","styles","alignContent","Button","title","Search","blur","setblur","term","setterm","placer","setplacer","gender","setgender","parent","setparent","genderSelected","setgenderSelected","filteredCrops","filter","toLocaleLowerCase","filteredParents","filteredFarmers","onOpenfilter","onCloseFilter","bottom","KeyboardAvoidingView","tint","intensity","absoluteFill","nonBlurredContent","value","dynamic","setSearch","right","AntDesign","Tab","createBottomTabNavigator","Stack","createStackNavigator","HomeTabs","Navigator","screenOptions","route","tabBarIcon","focused","iconName","tabBarOptions","activeTintColor","inactiveTintColor","showLabel","Screen","component","App","NavigationContainer","linking","prefixes","config","screens","Root","path","initialRouteName","Details","fallback","headerShown","module","exports"],"mappings":"uPAAO,SAASA,EAAeC,GAC3B,OAAGA,EAAIC,OAAO,GACVD,EAAKA,EAAIE,UAAU,EAAE,IAAI,MAIlBF,ECmBA,SAASG,EAAKC,GAAmB,IAE5CC,EAQED,EARFC,KACAC,EAOEF,EAPFE,OACAC,EAMEH,EANFG,KACAC,EAKEJ,EALFI,MACAC,EAIEL,EAJFK,QACAC,EAGEN,EAHFM,QACAC,EAEEP,EAFFO,WACAC,EACER,EADFQ,OAGIC,EAAcC,IAAWC,IAAI,UAAUC,MAG7C,OACE,kBAACC,EAAA,EAAD,CAAkBP,QAAS,kBAAMA,MAC/B,kBAACQ,EAAA,EAAD,CACEC,MACEN,EAAc,IACV,CACEG,MAAO,IACPI,OAAQ,IACRC,gBAAiB,OACjBC,YAAa,EACbC,YAAa,OACbC,aAAc,GACdC,WAAY,SACZC,OAAQ,EACRC,aAAc,EACdC,YAAa,UACbC,aAAc,CACZb,MAAO,EACPI,OAAQ,GAEVU,cAAe,IACfC,aAAc,KAEdC,UAAW,GAEb,CACEhB,MAAqB,IAAdH,EACPO,OAAQ,IACRC,gBAAiB,OACjBC,YAAa,EACbC,YAAa,OACbC,aAAc,GACdC,WAAY,SACZC,OAAQ,EAERE,YAAa,UACbC,aAAc,CACZb,MAAO,EACPI,OAAQ,GAEVU,cAAe,IACfC,aAAc,KAEdC,UAAW,IAInB,kBAACC,EAAA,EAAD,CACEC,OAAQ,CAAEC,IAAK7B,GACfa,MACGP,EAQG,CACEI,MAAO,IACPI,OAAQ,IACRE,YAAa,EACbC,YAAa,OACbC,aAAc,KAZhB,CACER,MAAO,IACPI,OAAQ,IACRE,YAAa,EACbC,YAAa,OACbC,aAAc,OAWxB,kBAACY,EAAA,EAAD,CAAMjB,MAAO,CAAEkB,WAAY,MAAOC,UAAW,KAC1CvC,EAAeM,IAGhBO,EAiCE,KAhCF,kBAACM,EAAA,EAAD,CACEC,MAAO,CACLoB,cAAe,MACfC,eAAgB,eAChBf,WAAY,SACZa,UAAW,KAGb,kBAACpB,EAAA,EAAD,CACEC,MAAO,CACLoB,cAAe,MACfd,WAAY,SACZe,eAAgB,WAGlB,kBAACP,EAAA,EAAD,CACEC,OAAQ,CAAEC,IAAKxB,GACfQ,MAAO,CACLC,OAAQ,GACRJ,MAAO,GACPO,YAAa,QACbD,YAAa,EACbE,aAAc,MAGlB,kBAACY,EAAA,EAAD,SAAQ7B,IAEV,kBAACkC,EAAA,EAAD,CAAQpC,KAAK,aAAaqC,KAAM,GAAIvB,MAAO,CAAEwB,IAAK,MAClD,kBAACzB,EAAA,EAAD,KACE,kBAACkB,EAAA,EAAD,KAAO3B,KAKXG,EAIE,KAHF,kBAACM,EAAA,EAAD,KACE,kBAACkB,EAAA,EAAD,KAAO5B,M,oCCPJoC,MArHf,SAAmBxC,GAAqB,IAC9ByC,EAAmDzC,EAAnDyC,QAASC,EAA0C1C,EAA1C0C,MAAOC,EAAmC3C,EAAnC2C,OAAmBC,GAAgB5C,EAA3B6C,UAA2B7C,EAAhB4C,aADN,EAGbE,oBAAS,GAHI,WAI/BC,GAJ+B,UAIrB,IAYhB,OACE,kBAACjC,EAAA,EAAD,CACEC,MAAO,CACLE,gBAAiB0B,EAAS,OAAS,cACnC3B,OAAQ,QAGV,kBAACF,EAAA,EAAD,CACEC,MAAO,CACLE,gBAAiB,OACjBD,OAAQ,GACRJ,MAAO,OACPoC,UAAW,SACXb,cAAe,MACfd,WAAY,SACZe,eAAgB,gBAChBhB,aAAc,EACd6B,QAAS,EACTzB,YAAa,UACbC,aAAc,CACZb,MAAO,EACPI,OAAQ,GAEVU,cAAe,IACfC,aAAc,KAEdC,UAAW,IAIb,kBAACsB,EAAA,EAAD,CACEnC,MACkB,QAAhBoC,IAASC,IAAgB,CACvBC,aAAc,OACdrC,OAAQ,GACRC,gBAAiB,QACjBL,MAAO,MACPqC,QAAS,EACTK,SAAU,IAGdC,QAASb,EACTc,YAAaZ,EACba,UAAWhB,EACXiB,SAAUjB,EACVkB,aAAc,SAACC,GACb,IAAIC,EAAID,EAAKE,cACbC,QAAQC,IAAIH,GACZ,IAAII,EAAU,GACVC,EAAQ,GAIRC,EAAKC,KAAI,SAACC,EAAMC,GAAP,OAAkBL,EAAQM,KAAKF,EAAKpE,SAM7CkE,EAAKC,KAAI,SAACC,EAAMC,GAAP,OAAkBJ,EAAMK,KAAKF,EAAKG,SAG/CT,QAAQC,IAAIC,GACZ,IAAK,IAAIQ,EAAI,EAAGA,EAAIR,EAAQpE,OAAQ4E,IAAK,CACvC,IAAIC,EAAIT,EAAQQ,GAAGX,cACXI,EAAMO,GAAGX,cAGH,GAFDY,EAAEC,SAASd,KAGtBd,EAAQwB,KAAKN,EAAQQ,IACrBV,QAAQC,IAAI,cAAgBjB,QAQpC,kBAACjC,EAAA,EAAD,CAAMC,MAAO,CAAEoB,cAAe,MAAOC,eAAgB,kBACnD,kBAACvB,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CACEC,MAAO,CACLH,MAAO,GACPI,OAAQ,GACRG,YAAa,UACbE,WAAY,SACZe,eAAgB,SAChBnB,gBAAiB,UACjBG,aAAc,KAGhB,kBAACwD,EAAA,EAAD,CAAiB3E,KAAK,YAAYqC,KAAM,GAAIuC,MAAM,aAK1D,kBAAC/D,EAAA,EAAD,QCtFSgE,MA7Bf,SAAsB9E,GAA2B,IAAD,EACtB8C,mBAAS,MADa,WAEnBiC,GAFmB,UAEO/E,EAA7CgF,SAA6ChF,EAAnCyC,QAAmCzC,EAA1B+E,WAAWE,EAAejF,EAAfiF,WAEtC,OACE,kBAACnE,EAAA,EAAD,CACEC,MAAO,CACLH,MAAO,OACPI,OAAQ,IACRK,WAAY,SACZ2B,UAAW,SACXb,cAAe,SACfC,eAAgB,iBAGlB,kBAACtB,EAAA,EAAD,CAAMC,MAAO,CAAEmB,UAAW,GAAIb,WAAY,WACxC,kBAACQ,EAAA,EAAD,CACEC,OAAQoD,EAAQ,KAChBnE,MAAO,CAAEH,MAAO,IAAKI,OAAQ,OAIjC,kBAACF,EAAA,EAAD,CAAMC,MAAO,CAAEmB,UAAW,EAAGtB,MAAO,SAClC,kBAAC,EAAD,CAAW8B,MAAOqC,EAAWnC,YAAaqC,O,2CC5C3C,SAASE,EAAW/E,GACvB,IAAIyD,EAAE,GAcN,OARAA,EAAIzD,EAAMgF,WAAWC,MAAM,IAC3BtB,QAAQC,IAAIH,GACZA,EAAEyB,OAAO,EAAE,EAAE,KACbzB,EAAEyB,OAAO,EAAE,EAAE,KACbzB,EAAEyB,OAAO,EAAE,EAAE,KACbzB,EAAEyB,OAAO,EAAE,EAAE,KAEbvB,QAAQC,IAAI,QAAQH,GACbA,E,aCqBJ,SAAS0B,EAAT,GAA+B,IAAfC,EAAc,EAAdA,WAAc,EACH1C,oBAAS,GADN,wBAECA,oBAAS,IAFV,wBAGLA,oBAAS,IAHJ,WAG5B2C,EAH4B,KAGnBC,EAHmB,OAIP5C,mBAAS,CACnC6C,WAAW,EACXC,MAAO,KAN0B,wBAQP9C,mBAAS,IARF,WAQ5B+C,EAR4B,KAQpBC,EARoB,OAUHhD,oBAAS,GAVN,WAW7BiD,GAX6B,UAWdrF,IAAWC,IAAI,UAAUK,QACxCP,EAAcC,IAAWC,IAAI,UAAUC,MACvCoF,EAAcC,iBAAiB,MAMrC,IAAMC,EAAY,GAqBlB,IAIMC,EAAU,WAAO,IAAD,EACpB,SAAAH,EAAYI,UAAZ,EAAqBC,SAIjBC,EAA0B,IADZ5F,IAAWC,IAAI,UAAUK,OAG7C,OACE,kBAACF,EAAA,EAAD,CAAMC,MAAO,CAAEC,OAAuB,IAAf+E,EAAqB9E,gBAAiB,YAC3D,kBAACH,EAAA,EAAD,CAAMC,MAAO,CAAEkC,QAAS,EAAGjC,OAAQ,SACjC,kBAAC,EAAD,CACE+D,UAAW,kBAAMS,EAAWe,SAAS,WACrCtB,WAAW,wBAEb,kBAACjD,EAAA,EAAD,CACEjB,MAAO,CACLmB,UAAW,GACXe,QAAS,EACThB,WAAY,MACZ4C,MAAO,YALX,oBAWA,kBAAC2B,EAAA,EAAD,CACEC,sBAAuB,CACrBtE,cAAe,MACfvB,MAAOH,EAAc,IAAM,MAAQ,OACnCiG,SAAU,OACVxE,UAAW,EACXb,WAAY,aACZ2B,UAAW,SACXZ,eAAgB,cAElBuE,8BAA8B,EAC9BC,SAAS,GAERC,EAAQzC,KAAI,SAACC,EAAMC,GAClB,OACE,kBAACvE,EAAD,CACE+G,IAAKzC,EAAK0C,GACV9G,KAAMoE,EAAKpE,KACXC,OAAQmE,EAAKnE,OACbE,MAAOiE,EAAKjE,MACZC,QAASgE,EAAKhE,QACdF,KAAMkE,EAAKlE,KACXG,QAAS,WAvEvB,IAAkByG,EAwEFjB,EAAUzB,EAAK0C,IApDhB,WAAO,IAAD,EACnB,SAAAf,EAAYI,UAAZ,EAAqBY,OAoDLC,GAzEAF,EA0ES1C,EAAK0C,GAxE5BF,EAAQzC,KAAI,SAACC,EAAMC,GACjB,GAAIyC,GAAM1C,EAAK0C,GAYb,OAAO,kBAAC/E,EAAA,EAAD,sBAXPkE,EAAU3B,KACRF,EAAK0C,GACL1C,EAAKpE,KACLoE,EAAKhE,QACLgE,EAAKnE,OACLmE,EAAKlE,KACLkE,EAAKjE,OAGP2D,QAAQC,IAAIkC,MA8DFR,GAAW,IAEfnF,WAAY8D,EAAK6C,YAMzB,kBAAC,WAAD,CACEC,IAAKnB,EACLoB,YAAad,EACbe,UAAW,IACXC,WACE7G,EAAc,IAAM,CAAEG,MAAO,IAAKoC,UAAW,UAAa,KAE5DuE,mBAAmB,EACnBC,KAAG,GAEFX,EAAQzC,KAAI,SAACC,EAAMC,GAElB,GADYuB,GACCxB,EAAK0C,GAChB,OACE,kBAACjG,EAAA,EAAD,KACE,kBAACA,EAAA,EAAD,CACEC,MAAO,CACLE,gBAAiB,UACjBL,MAAO,OACPI,OAAQ,IACRE,YAAa,EACbqB,KAAM,EACNnB,aAAc,GACdD,YAAa,UACbK,YAAa,OACbC,aAAc,CACZb,MAAO,EACPI,OAAQ,GAEVU,cAAe,IACfC,aAAc,KAEdC,UAAW,IAOb,kBAACf,EAAA,EAAD,CACEP,QAAS,WACP6F,IAAWT,GAAW,IAExB3E,MAAO,CACLM,WAAY,SACZa,UAAW,EACXuF,YAAa,EACbxE,QAAS,EACTb,eAAgB,SAChBY,UAAW,WACX/B,gBAAiB,kBACjBG,aAAc,GACdJ,OAAQ,GACRJ,MAAO,KAGT,kBAACE,EAAA,EAAD,CACEC,MAAO,CACLoB,cAAe,MACfC,eAAgB,gBAChBf,WAAY,WAGd,kBAACW,EAAA,EAAD,CACEjB,MAAO,CACLuC,SAAU,GACVrB,WAAY,IACZ4C,MAAO,OACP4C,YAAa,IALjB,SAUA,kBAAC7C,EAAA,EAAD,CACE3E,KAAK,QACLqC,KAAM,GACNuC,MAAM,OACNvE,QAAS,WACP6F,IAAWT,GAAW,QAK9B,kBAAC5E,EAAA,EAAD,CACEC,MAAO,CACLoB,cAAe,MACfd,WAAY,SACZe,eAAgB,gBAChBa,QAAS,EACTV,KAAM,KAGR,kBAACzB,EAAA,EAAD,CACEC,MAAO,CAAEH,MAAO,MAAOI,OAAQ,OAAQiC,QAAS,IAEhD,kBAACpB,EAAA,EAAD,CACEC,OAAQ,CAAEC,IAAKsC,EAAKnE,QACpBa,MAAO,CACLC,OAAQ,IACRJ,MAAO,IACPQ,aAAc,IACdD,YAAa,OACbD,YAAa,MAInB,kBAACJ,EAAA,EAAD,CACEC,MAAO,CACLoB,cAAe,SACfd,WAAY,SACZe,eAAgB,eAChBxB,MAAO,MACPI,OAAQ,SAGV,kBAACF,EAAA,EAAD,CACEC,MAAO,CACLoB,cAAe,SACfd,WAAY,aACZT,MAAO,OACPI,OAAQ,OACRoB,eAAgB,iBAGlB,kBAACtB,EAAA,EAAD,CAAMC,MAAO,CAAEoB,cAAe,QAC5B,kBAACuF,EAAA,EAAD,CAASzH,KAAK,OAAOqC,KAAM,GAAIuC,MAAM,SACrC,kBAAC7C,EAAA,EAAD,CACEjB,MAAO,CACLuC,SAAU,GACVuB,MAAO,OACP5C,WAAY,MACZ0F,WAAY,IAGbhI,EAAe0E,EAAKpE,QAGzB,kBAACa,EAAA,EAAD,CAAMC,MAAO,CAAEoB,cAAe,QAC5B,kBAACuF,EAAA,EAAD,CAASzH,KAAK,UAAUqC,KAAM,GAAIuC,MAAM,SACxC,kBAAC7C,EAAA,EAAD,CACEjB,MAAO,CACLuC,SAAU,GACVuB,MAAO,OACP5C,WAAY,MACZ0F,WAAY,IAGbtD,EAAKhE,UAGV,kBAACS,EAAA,EAAD,CAAMC,MAAO,CAAEoB,cAAe,QAC5B,kBAACuF,EAAA,EAAD,CAASzH,KAAK,OAAOqC,KAAM,GAAIuC,MAAM,SACrC,kBAAC7C,EAAA,EAAD,CACEjB,MAAO,CACLuC,SAAU,GACVuB,MAAO,OACP5C,WAAY,MACZ0F,WAAY,IAGbxC,EAAWd,EAAKjE,YAM3B,kBAACU,EAAA,EAAD,CAAMC,MAAO,CAAEwB,KAAM,KACnB,kBAACP,EAAA,EAAD,CACEjB,MAAO,CACLmB,UAAW,GACXe,QAAS,EACThB,WAAY,MACZ4C,MAAO,UACPvB,SAAU,GACVqE,WAAY,IAPhB,mBAYA,kBAAC7G,EAAA,EAAD,CACEC,MAAO,CACLH,MAAO,MACPoC,UAAW,SACXhC,OAAQ,EACRC,gBAAiB,aAGrB,kBAACH,EAAA,EAAD,CACEC,MAAO,CACLoB,cAAe,SACfD,UAAW,GACXe,QAAS,GACTjC,OAAQ,IACRoB,eAAgB,kBAGlB,kBAACtB,EAAA,EAAD,CACEC,MAAO,CACLoB,cAAe,MACfd,WAAY,SACZT,MAAO,OACPwB,eAAgB,gBAChBb,aAAc,KAGhB,kBAACT,EAAA,EAAD,CACEC,MAAO,CAAEoB,cAAe,SAAUvB,MAAO,QAEzC,kBAACE,EAAA,EAAD,CACEC,MAAO,CACLoB,cAAe,MACfd,WAAY,WAGd,kBAACgB,EAAA,EAAD,CAAQpC,KAAK,OAAOqC,KAAM,GAAIuC,MAAM,YACpC,kBAAC7C,EAAA,EAAD,CACEjB,MAAO,CACLuC,SAAU,GACVuB,MAAO,UACP5C,WAAY,QAJhB,SAUF,kBAACnB,EAAA,EAAD,KACG8G,EAAMxD,KAAI,SAACyD,EAAUvD,GAAY,IAAD,EAC3BT,EAAIgE,EAAS5H,KAAK6D,cAClBY,EAAC,SAAGL,EAAKlE,WAAR,EAAG,EAAW2D,cACND,EAAEiE,cAAcpD,GAE7B,GAAIb,GAAKa,EACP,OACE,kBAAC5D,EAAA,EAAD,CACEC,MAAO,CACLoB,cAAe,MACfd,WAAY,WAGd,kBAACQ,EAAA,EAAD,CACEC,OAAQ,CAAEC,IAAK8F,EAASX,OACxBnG,MAAO,CACLC,OAAQ,GACRJ,MAAO,GACPM,YAAa,EACbE,aAAc,GACdD,YAAa,aAGjB,kBAACa,EAAA,EAAD,CACEjB,MAAO,CAAEuC,SAAU,GAAIqE,WAAY,IAElCE,EAAS5H,YAWxB,kBAACa,EAAA,EAAD,CACEC,MAAO,CACLoB,cAAe,SACfvB,MAAO,MACPS,WAAY,aAGd,kBAACP,EAAA,EAAD,CACEC,MAAO,CACLoB,cAAe,MACfd,WAAY,WAGd,kBAACuD,EAAA,EAAD,CACE3E,KAAK,WACLqC,KAAM,GACNuC,MAAM,YAER,kBAAC7C,EAAA,EAAD,CACEjB,MAAO,CACLuC,SAAU,GACVuB,MAAO,UACP8C,WAAY,EACZ1F,WAAY,QALhB,iBAWF,kBAACnB,EAAA,EAAD,KACE,kBAACkB,EAAA,EAAD,CAAMjB,MAAO,CAAEuC,SAAU,GAAIqE,WAAY,IACtCtD,EAAK0D,gBAKd,kBAACjH,EAAA,EAAD,CACEC,MAAO,CACLoB,cAAe,MACfd,WAAY,SACZT,MAAO,OACPwB,eAAgB,gBAChBF,UAAW,IAGb,kBAACpB,EAAA,EAAD,CACEC,MAAO,CAAEoB,cAAe,SAAUvB,MAAO,QAEzC,kBAACE,EAAA,EAAD,CACEC,MAAO,CACLoB,cAAe,MACfd,WAAY,WAGd,kBAACuD,EAAA,EAAD,CACE3E,KAAK,kBACLqC,KAAM,GACNuC,MAAM,YAER,kBAAC7C,EAAA,EAAD,CACEjB,MAAO,CACLuC,SAAU,GACVuB,MAAO,UACP5C,WAAY,MACZ0F,WAAY,IALhB,iBAWF,kBAAC7G,EAAA,EAAD,KACE,kBAACkB,EAAA,EAAD,CAAMjB,MAAO,CAAEuC,SAAU,KACtBe,EAAK2D,KADR,aAMJ,kBAAClH,EAAA,EAAD,CACEC,MAAO,CACLoB,cAAe,SACfvB,MAAO,MACPS,WAAY,aAGd,kBAACP,EAAA,EAAD,CACEC,MAAO,CACLoB,cAAe,MACfd,WAAY,WAGd,kBAACuD,EAAA,EAAD,CACE3E,KAAK,cACLqC,KAAM,GACNuC,MAAM,YAER,kBAAC7C,EAAA,EAAD,CACEjB,MAAO,CACLuC,SAAU,GACVuB,MAAO,UACP8C,WAAY,EACZ1F,WAAY,QALhB,aAWF,kBAACnB,EAAA,EAAD,KACE,kBAACkB,EAAA,EAAD,CAAMjB,MAAO,CAAEuC,SAAU,GAAIqE,WAAY,IACtCtD,EAAK4D,SADR,eAMN,kBAACnH,EAAA,EAAD,OAEF,kBAACA,EAAA,EAAD,CACEC,MAAO,CACLH,MAAO,MACPoC,UAAW,SACXhC,OAAQ,EACRC,gBAAiB,UACjBiB,UAAW,OAIjB,kBAACpB,EAAA,EAAD,CACEC,MAAO,CACLH,MAAO,OACPuB,cAAe,SACfI,KAAM,GACNlB,WAAY,WAGd,kBAACW,EAAA,EAAD,CACEjB,MAAO,CACLuC,SAAU,GACVuB,MAAO,UACP8C,WAAY,IAJhB,eASA,kBAAC7G,EAAA,EAAD,CACEC,MAAO,CACLH,MAAO,OACPuB,cAAe,MACfd,WAAY,SACZe,eAAgB,eAChBG,IAAK,IAGP,kBAAC1B,EAAA,EAAD,CACEE,MAAO,CACLH,MAAO,IACPI,OAAQ,GACRC,gBAAiB,UACjBI,WAAY,SACZe,eAAgB,SAChBD,cAAe,MACff,aAAc,IAEhBd,QAAS,kBACP4H,MACE,yGAIJ,kBAACC,EAAA,EAAD,CACElI,KAAK,WACLqC,KAAM,GACNuC,MAAM,SAER,kBAAC7C,EAAA,EAAD,CACEjB,MAAO,CACLuC,SAAU,GACVuB,MAAO,OACP8C,WAAY,IAJhB,SAUF,kBAAC9G,EAAA,EAAD,CACEE,MAAO,CACLH,MAAO,IACPI,OAAQ,GACRC,gBAAiB,OACjBI,WAAY,SACZe,eAAgB,SAChBD,cAAe,MACff,aAAc,GACdD,YAAa,UACbD,YAAa,GAEfZ,QAAS,kBACP4H,MACE,2DAIJ,kBAACE,EAAA,EAAD,CACEnI,KAAK,cACLqC,KAAM,GACNuC,MAAM,YAER,kBAAC7C,EAAA,EAAD,CACEjB,MAAO,CACLuC,SAAU,GACVuB,MAAO,UACP8C,WAAY,IAJhB,qBA4DpB,kBAAC7G,EAAA,EAAD,CACEC,MAAO,CACLH,MAAO,OACPK,gBAAiB,cACjBD,OAAQ,GACRuB,KAAM,KAGR,kBAAC,IAAD,CACE8F,SAAS,SACT5F,SAAUgD,EACV6C,aAAa,cACbzD,MAAM,UACN0D,aAAcC,IAAMC,aAClB,kBAAC7D,EAAA,EAAD,CAAiB3E,KAAK,YAAY4E,MAAM,OAAOvC,KAAM,MAEvDoG,YAAa,kBAAMlD,EAAWe,SAAS,eAOlCoC,IAAWC,OAAO,CAC/BC,UAAW,CACTC,KAAM,EACN7H,gBAAiB,UACjBI,WAAY,SACZe,eAAgB,YALpB,I,SC3qBa2G,EAAQ,SAAC/I,GACpB,IAAMgG,EAAcC,iBAAiB,MAW/BK,EAA0B,IADZ5F,IAAWC,IAAI,UAAUK,OAGvBhB,EAAdgJ,UACR,OACE,oCACE,kBAACnI,EAAA,EAAD,CAAkBP,QAdP,WAAO,IAAD,EACnB,SAAA0F,EAAYI,UAAZ,EAAqBY,SAcjB,kBAAChF,EAAA,EAAD,wBAGF,kBAAC,WAAD,CACEmF,IAAKnB,EACLoB,YAAad,EACbe,UAAW,IACXE,mBAAmB,EACnB0B,cAAe,CACbH,KAAM,EACN7H,gBAAiB,OACjBI,WAAY,SACZe,eAAgB,UAElBkF,WAAY,CAAErG,gBAAiB,QAE/B,kBAACJ,EAAA,EAAD,CAAkBP,QAAS,kBA3BjB,WAAO,IAAD,EACpB,SAAA0F,EAAYI,UAAZ,EAAqBC,QA0BgBF,KAAjC,iBC7BD,SAAS+C,EAAT,GAAkC,IAAf1D,EAAc,EAAdA,WACxB,OACE,kBAACgB,EAAA,EAAD,CAAYG,8BAA8B,GACxC,kBAAC7F,EAAA,EAAD,KACE,kBAACA,EAAA,EAAD,CACEC,MAAO,CACLoI,EAAON,UACP,CACEzG,eAAgB,SAChBgH,aAAc,aACdnG,QAAS,MAIb,kBAACjB,EAAA,EAAD,mBAEF,kBAAClB,EAAA,EAAD,CACEC,MAAO,CACLH,MAAO,OACPK,gBAAiB,MACjBgC,QAAS,EACTjC,OAAQ,GACRoB,eAAgB,gBAChBG,IAAK,GACLJ,cAAe,WAGjB,kBAACH,EAAA,EAAD,CAAMjB,MAAO,CAAEuC,SAAU,GAAIuB,MAAO,YAApC,WACA,kBAAC7C,EAAA,EAAD,CAAMjB,MAAO,CAAEuC,SAAU,GAAIuB,MAAO,UAAW5C,WAAY,SAA3D,yBAGA,kBAACoH,EAAA,EAAD,CACEC,MAAM,eACNhJ,QAAS,kBAAMkF,EAAWe,SAAS,cAIvC,kBAACzF,EAAA,EAAD,CAAMC,MAAO,CAAEmB,UAAW,GAAIe,QAAS,EAAGjC,OAAQ,SAChD,kBAACgB,EAAA,EAAD,0BACA,kBAAC,EAAD,SAOV,IAAMmH,EAASR,IAAWC,OAAO,CAC/BC,UAAW,CACTC,KAAM,EACN7H,gBAAiB,OACjBI,WAAY,SACZe,eAAgB,Y,oCC7Bd2D,EAAerF,IAAWC,IAAI,UAAUK,OAExCsF,EAA0B,IADZ5F,IAAWC,IAAI,UAAUK,OAEvCP,EAAcC,IAAWC,IAAI,UAAUC,MAGtC,SAAS2I,EAAT,GAAiC,IAAf/D,EAAc,EAAdA,WAAc,EACb1C,oBAAS,GADI,WAC9B0G,EAD8B,KACxBC,EADwB,OAEb3G,mBAAS,IAFI,WAE9B4G,EAF8B,KAExBC,EAFwB,OAGT7G,oBAAS,GAHA,WAG9B8G,EAH8B,KAGtBC,EAHsB,OAIT/G,mBAAS,GAJA,WAI9B+C,EAJ8B,KAItBC,EAJsB,OAKDhD,oBAAS,GALR,wBAMOA,oBAAS,IANhB,yBAOTA,mBAAS,KAPA,aAO9BgH,GAP8B,MAOtBC,GAPsB,SAQPjH,oBAAS,GARF,aAQ9B2C,GAR8B,MAQrBC,GARqB,SAST5C,oBAAS,GATA,aAS9BkH,GAT8B,MAStBC,GATsB,SAUOnH,oBAAS,GAVhB,aAU9BoH,GAV8B,MAUdC,GAVc,MAiB/BC,GAAgBjG,EAAKkG,QAAO,SAAChG,GACjC,OAAOA,EAAKpE,KAAKqK,oBAAoB3F,SAAS+E,EAAK5F,kBAG/CyG,GAAkBpG,EAAKkG,QAAO,SAAChG,GACnC,OAAOA,EAAKG,KAAK8F,oBAAoB3F,SAAS+E,EAAK5F,kBAG/C0G,GAAkB3D,EAAQwD,QAAO,SAAChG,GACtC,OAAOA,EAAKlE,KAAKmK,oBAAoB3F,SAAS+E,EAAK5F,kBAO/CkC,IAJewE,GAAgBH,QAAO,SAAChG,GAC3C,OAAOA,EAAKyF,OAAOQ,oBAAoB3F,SAAS+E,EAAK5F,kBAGnCmC,iBAAiB,OAc/BE,GAAU,WAAO,IAAD,EACpB,SAAAH,GAAYI,UAAZ,EAAqBC,SAGvB,OACE,kBAACvF,EAAA,EAAD,CAAMC,MAAO,CAAEE,gBAAiB,OAAQkB,cAAe,WACrD,kBAACrB,EAAA,EAAD,CAAMC,MAAO,CAAEC,OAAQ+E,EAAc9E,gBAAiB,YACpD,kBAACH,EAAA,EAAD,CAAMC,MAAO,CAAEkC,QAAS,EAAGjC,OAAQ,SACjC,kBAAC,EAAD,CACE+D,UAAW,WACT0E,GAASD,GAAOG,EAAQ,IAAKM,IAAU,IAEzChF,WAAY2E,GAAUI,IAAgBA,GAAPN,EAAuB,WAEvDE,EACEI,GA6BC,kBAAClJ,EAAA,EAAD,KACE,kBAACkB,EAAA,EAAD,CACEjB,MAAO,CACLmB,UAAW,GACXe,QAAS,EACThB,WAAY,MACZ4C,MAAO,YAGR6E,IArCL,kBAAC5I,EAAA,EAAD,CACEC,MAAO,CACLH,MAAO,OACPuB,cAAe,MACfd,WAAY,SACZe,eAAgB,kBAGlB,kBAACJ,EAAA,EAAD,CACEjB,MAAO,CACLmB,UAAW,GACXe,QAAS,EACThB,WAAY,MACZ4C,MAAO,YAGR6E,GAEH,kBAAC7I,EAAA,EAAD,CACEE,MAAO,CAAEwB,IAAK,IACdjC,QAAS,WACPyD,QAAQC,IAAI,WA7CT,WAAO,IAAD,EACzB,SAAAgC,GAAYI,UAAZ,EAAqBY,OA4CmByD,KAH5B,WAuBFT,GACF,kBAAClJ,EAAA,EAAD,KACE,kBAACkB,EAAA,EAAD,CACEjB,MAAO,CACLmB,UAAW,GACXe,QAAS,EACThB,WAAY,MACZ4C,MAAO,YAGR6E,IAIL,kBAAC5I,EAAA,EAAD,CACEC,MAAO,CACLH,MAAO,OACPuB,cAAe,MACfd,WAAY,SACZe,eAAgB,kBAGlB,kBAACJ,EAAA,EAAD,CACEjB,MAAO,CACLmB,UAAW,GACXe,QAAS,EACThB,WAAY,MACZ4C,MAAO,YAGR6E,GAEH,kBAAC7I,EAAA,EAAD,CACEE,MAAO,CAAEwB,IAAK,IACdjC,QAAS,kBAAMyD,QAAQC,IAAI,aAF7B,WAmBJ,kBAACwC,EAAA,EAAD,CAAYG,8BAA8B,EAAOC,SAAS,GACvDoD,GACC,kBAAClJ,EAAA,EAAD,CACEC,MAAO,CACLoB,cAAe,MACfvB,MAAOH,EAAc,IAAM,MAAQ,OACnCiG,SAAU,OACVxE,UAAW,EACXb,WAAY,aACZe,eAAgB,aAChBY,UAAW,WAGZuH,GAAgBnG,KAAI,SAACC,EAAMC,GAC1B,OACE,kBAACvE,EAAD,CACE+G,IAAKzC,EAAK0C,GACV9G,KAAMoE,EAAKpE,KACXC,OAAQmE,EAAK6C,MACb1G,QAAQ,EACRF,QAAS,WACP2J,IAAWD,IAASL,EAAQtF,EAAKpE,aAO3C,kBAACa,EAAA,EAAD,CACEC,MAAO,CACLoB,cAAe,MACfvB,MAAOH,EAAc,IAAM,MAAQ,OACnCiG,SAAU,OACVxE,UAAW,EACXb,WAAY,aACZe,eAAgB,aAChBY,UAAW,WAGZwH,GAAgBpG,KAAI,SAACC,EAAMC,GAC1B,OACE,kBAACvE,EAAD,CACE+G,IAAKzC,EAAK0C,GACV9G,KAAMoE,EAAKpE,KACXC,OAAQmE,EAAKnE,OACbE,MAAOiE,EAAKjE,MACZC,QAASgE,EAAKhE,QACdF,KAAMkE,EAAKlE,KACXG,QAAS,WACPwF,EAAUzB,EAAK0C,IAzKtB,WAAO,IAAD,EACnB,SAAAf,GAAYI,UAAZ,EAAqBY,OAwKmBC,GAAUvB,IAAW,IAE3CnF,WAAY8D,EAAK6C,aAO7B,kBAAC,WAAD,CACEC,IAAKnB,GACLoB,YAAad,EACbgB,WACE7G,EAAc,IAAM,CAAEG,MAAO,IAAKoC,UAAW,UAAa,KAE5DqE,UAAW,IACXE,mBAAmB,EACnBC,KAAG,GAEFgD,GAAgBpG,KAAI,SAACC,EAAMC,GAE1B,GADYuB,GACCxB,EAAK0C,GAChB,OACE,kBAACjG,EAAA,EAAD,KACE,kBAACA,EAAA,EAAD,CACEC,MAAO,CACLE,gBAAiB,UACjBL,MAAO,OACPI,OAAQ,IACRE,YAAa,EACbqB,KAAM,EACNnB,aAAc,GACdD,YAAa,UACbK,YAAa,OACbC,aAAc,CACZb,MAAO,EACPI,OAAQ,GAEVU,cAAe,IACfC,aAAc,KAEdC,UAAW,KAOb,kBAACf,EAAA,EAAD,CACEP,QAAS,WACP6F,KAAWT,IAAW,IAExB3E,MAAO,CACLM,WAAY,SACZa,UAAW,EACXuF,YAAa,EACbxE,QAAS,EACTb,eAAgB,SAChBY,UAAW,WACX/B,gBAAiB,kBACjBG,aAAc,GACdJ,OAAQ,GACRJ,MAAO,KAGT,kBAACE,EAAA,EAAD,CACEC,MAAO,CACLoB,cAAe,MACfC,eAAgB,gBAChBf,WAAY,WAGd,kBAACW,EAAA,EAAD,CACEjB,MAAO,CACLuC,SAAU,GACVrB,WAAY,IACZ4C,MAAO,OACP4C,YAAa,IALjB,SAUA,kBAAC7C,EAAA,EAAD,CACE3E,KAAK,QACLqC,KAAM,GACNuC,MAAM,OACNvE,QAAS,WACP6F,KAAWT,IAAW,QAK9B,kBAAC5E,EAAA,EAAD,CACEC,MAAO,CACLoB,cAAe,MACfd,WAAY,SACZe,eAAgB,gBAChBa,QAAS,EACTV,KAAM,KAGR,kBAACzB,EAAA,EAAD,CACEC,MAAO,CAAEH,MAAO,MAAOI,OAAQ,OAAQiC,QAAS,IAEhD,kBAACpB,EAAA,EAAD,CACEC,OAAQ,CAAEC,IAAKsC,EAAKnE,QACpBa,MAAO,CACLC,OAAQ,IACRJ,MAAO,IACPQ,aAAc,IACdD,YAAa,OACbD,YAAa,MAInB,kBAACJ,EAAA,EAAD,CACEC,MAAO,CACLoB,cAAe,SACfd,WAAY,SACZe,eAAgB,eAChBxB,MAAO,MACPI,OAAQ,SAGV,kBAACF,EAAA,EAAD,CACEC,MAAO,CACLoB,cAAe,SACfd,WAAY,aACZT,MAAO,OACPI,OAAQ,OACRoB,eAAgB,iBAGlB,kBAACtB,EAAA,EAAD,CAAMC,MAAO,CAAEoB,cAAe,QAC5B,kBAACuF,EAAA,EAAD,CAASzH,KAAK,OAAOqC,KAAM,GAAIuC,MAAM,SACrC,kBAAC7C,EAAA,EAAD,CACEjB,MAAO,CACLuC,SAAU,GACVuB,MAAO,OACP5C,WAAY,MACZ0F,WAAY,IAGbhI,EAAe0E,EAAKpE,QAGzB,kBAACa,EAAA,EAAD,CAAMC,MAAO,CAAEoB,cAAe,QAC5B,kBAACuF,EAAA,EAAD,CAASzH,KAAK,UAAUqC,KAAM,GAAIuC,MAAM,SACxC,kBAAC7C,EAAA,EAAD,CACEjB,MAAO,CACLuC,SAAU,GACVuB,MAAO,OACP5C,WAAY,MACZ0F,WAAY,IAGbtD,EAAKhE,UAGV,kBAACS,EAAA,EAAD,CAAMC,MAAO,CAAEoB,cAAe,QAC5B,kBAACuF,EAAA,EAAD,CAASzH,KAAK,OAAOqC,KAAM,GAAIuC,MAAM,SACrC,kBAAC7C,EAAA,EAAD,CACEjB,MAAO,CACLuC,SAAU,GACVuB,MAAO,OACP5C,WAAY,MACZ0F,WAAY,IAGbxC,EAAWd,EAAKjE,YAM3B,kBAACU,EAAA,EAAD,CAAMC,MAAO,CAAEwB,KAAM,KACnB,kBAACP,EAAA,EAAD,CACEjB,MAAO,CACLmB,UAAW,GACXe,QAAS,EACThB,WAAY,MACZ4C,MAAO,UACPvB,SAAU,GACVqE,WAAY,IAPhB,mBAYA,kBAAC7G,EAAA,EAAD,CACEC,MAAO,CACLH,MAAO,MACPoC,UAAW,SACXhC,OAAQ,EACRC,gBAAiB,aAGrB,kBAACH,EAAA,EAAD,CACEC,MAAO,CACLoB,cAAe,SACfD,UAAW,GACXe,QAAS,GACTjC,OAAQ,IACRoB,eAAgB,kBAGlB,kBAACtB,EAAA,EAAD,CACEC,MAAO,CACLoB,cAAe,MACfd,WAAY,SACZT,MAAO,OACPwB,eAAgB,gBAChBb,aAAc,KAGhB,kBAACT,EAAA,EAAD,CACEC,MAAO,CACLoB,cAAe,SACfvB,MAAO,QAGT,kBAACE,EAAA,EAAD,CACEC,MAAO,CACLoB,cAAe,MACfd,WAAY,WAGd,kBAACgB,EAAA,EAAD,CAAQpC,KAAK,OAAOqC,KAAM,GAAIuC,MAAM,YACpC,kBAAC7C,EAAA,EAAD,CACEjB,MAAO,CACLuC,SAAU,GACVuB,MAAO,UACP5C,WAAY,QAJhB,SAUF,kBAACnB,EAAA,EAAD,KACGqD,EAAKC,KAAI,SAACyD,EAAUvD,GAAY,IAAD,EAC1BT,EAAIgE,EAAS5H,KAAK6D,cAClBY,EAAC,SAAGL,EAAKlE,WAAR,EAAG,EAAW2D,cACND,EAAEiE,cAAcpD,GAE7B,GAAIb,GAAKa,EACP,OACE,kBAAC5D,EAAA,EAAD,CACEC,MAAO,CACLoB,cAAe,MACfd,WAAY,WAGd,kBAACQ,EAAA,EAAD,CACEC,OAAQ,CAAEC,IAAK8F,EAASX,OACxBnG,MAAO,CACLC,OAAQ,GACRJ,MAAO,GACPM,YAAa,EACbE,aAAc,GACdD,YAAa,aAGjB,kBAACa,EAAA,EAAD,CACEjB,MAAO,CACLuC,SAAU,GACVqE,WAAY,IAGbE,EAAS5H,YAWxB,kBAACa,EAAA,EAAD,CACEC,MAAO,CACLoB,cAAe,SACfvB,MAAO,MACPS,WAAY,aAGd,kBAACP,EAAA,EAAD,CACEC,MAAO,CACLoB,cAAe,MACfd,WAAY,WAGd,kBAACuD,EAAA,EAAD,CACE3E,KAAK,WACLqC,KAAM,GACNuC,MAAM,YAER,kBAAC7C,EAAA,EAAD,CACEjB,MAAO,CACLuC,SAAU,GACVuB,MAAO,UACP8C,WAAY,EACZ1F,WAAY,QALhB,iBAWF,kBAACnB,EAAA,EAAD,KACE,kBAACkB,EAAA,EAAD,CAAMjB,MAAO,CAAEuC,SAAU,GAAIqE,WAAY,IACtCtD,EAAK0D,gBAKd,kBAACjH,EAAA,EAAD,CACEC,MAAO,CACLoB,cAAe,MACfd,WAAY,SACZT,MAAO,OACPwB,eAAgB,gBAChBF,UAAW,IAGb,kBAACpB,EAAA,EAAD,CACEC,MAAO,CACLoB,cAAe,SACfvB,MAAO,QAGT,kBAACE,EAAA,EAAD,CACEC,MAAO,CACLoB,cAAe,MACfd,WAAY,WAGd,kBAACuD,EAAA,EAAD,CACE3E,KAAK,kBACLqC,KAAM,GACNuC,MAAM,YAER,kBAAC7C,EAAA,EAAD,CACEjB,MAAO,CACLuC,SAAU,GACVuB,MAAO,UACP5C,WAAY,MACZ0F,WAAY,IALhB,iBAWF,kBAAC7G,EAAA,EAAD,KACE,kBAACkB,EAAA,EAAD,CAAMjB,MAAO,CAAEuC,SAAU,KACtBe,EAAK2D,KADR,aAMJ,kBAAClH,EAAA,EAAD,CACEC,MAAO,CACLoB,cAAe,SACfvB,MAAO,MACPS,WAAY,aAGd,kBAACP,EAAA,EAAD,CACEC,MAAO,CACLoB,cAAe,MACfd,WAAY,WAGd,kBAACuD,EAAA,EAAD,CACE3E,KAAK,cACLqC,KAAM,GACNuC,MAAM,YAER,kBAAC7C,EAAA,EAAD,CACEjB,MAAO,CACLuC,SAAU,GACVuB,MAAO,UACP8C,WAAY,EACZ1F,WAAY,QALhB,aAWF,kBAACnB,EAAA,EAAD,KACE,kBAACkB,EAAA,EAAD,CAAMjB,MAAO,CAAEuC,SAAU,GAAIqE,WAAY,IACtCtD,EAAK4D,SADR,eAMN,kBAACnH,EAAA,EAAD,OAEF,kBAACA,EAAA,EAAD,CACEC,MAAO,CACLH,MAAO,MACPoC,UAAW,SACXhC,OAAQ,EACRC,gBAAiB,UACjBiB,UAAW,OAIjB,kBAACpB,EAAA,EAAD,CACEC,MAAO,CACLH,MAAO,OACPuB,cAAe,SACfI,KAAM,GACNlB,WAAY,WAGd,kBAACW,EAAA,EAAD,CACEjB,MAAO,CACLuC,SAAU,GACVuB,MAAO,UACP8C,WAAY,IAJhB,eASA,kBAAC7G,EAAA,EAAD,CACEC,MAAO,CACLH,MAAO,OACPuB,cAAe,MACfd,WAAY,SACZe,eAAgB,eAChBG,IAAK,IAGP,kBAAC1B,EAAA,EAAD,CACEE,MAAO,CACLH,MAAO,IACPI,OAAQ,GACRC,gBAAiB,UACjBI,WAAY,SACZe,eAAgB,SAChBD,cAAe,MACff,aAAc,IAEhBd,QAAS,kBACP4H,MACE,yGAIJ,kBAACC,EAAA,EAAD,CACElI,KAAK,WACLqC,KAAM,GACNuC,MAAM,SAER,kBAAC7C,EAAA,EAAD,CACEjB,MAAO,CACLuC,SAAU,GACVuB,MAAO,OACP8C,WAAY,IAJhB,SAUF,kBAAC9G,EAAA,EAAD,CACEE,MAAO,CACLH,MAAO,IACPI,OAAQ,GACRC,gBAAiB,OACjBI,WAAY,SACZe,eAAgB,SAChBD,cAAe,MACff,aAAc,GACdD,YAAa,UACbD,YAAa,GAEfZ,QAAS,kBACP4H,MACE,2DAIJ,kBAACE,EAAA,EAAD,CACEnI,KAAK,cACLqC,KAAM,GACNuC,MAAM,YAER,kBAAC7C,EAAA,EAAD,CACEjB,MAAO,CACLuC,SAAU,GACVuB,MAAO,UACP8C,WAAY,IAJhB,oBAqBlB,kBAAC,WAAD,CACER,IAAKnB,GACLoB,YAAad,EACbgB,WACE7G,EAAc,IAAM,CAAEG,MAAO,IAAKoC,UAAW,UAAa,KAE5DqE,UAAW,IACXE,mBAAmB,EACnBC,KAAG,GAEH,kBAAC1G,EAAA,EAAD,CACEC,MAAO,CACLH,MAAO,OACPuB,cAAe,MACfd,WAAY,SACZe,eAAgB,gBAChBa,QAAS,IAGX,kBAACjB,EAAA,EAAD,CACEjB,MAAO,CACLkC,QAAS,EACThB,WAAY,MACZ4C,MAAO,UACPvB,SAAU,GACVqE,WAAY,IANhB,sBAWA,kBAAC9G,EAAA,EAAD,CAAkBP,QAAS,kBA1rBjB,WAAO,IAAD,EAC1B,SAAA0F,GAAYI,UAAZ,EAAqBC,QAyrBsBqE,KAAjC,iBAIF,kBAAC5J,EAAA,EAAD,CACEC,MAAO,CACLH,MAAO,MACPoC,UAAW,aACXhC,OAAQ,EACRC,gBAAiB,UACjBiB,UAAW,GACXb,WAAY,gBAGhB,kBAACW,EAAA,EAAD,kBACA,kBAAClB,EAAA,EAAD,CACEC,MAAO,CACLH,MAAO,OACPuB,cAAe,MACfd,WAAY,SACZe,eAAgB,aAChBa,QAAS,IAGX,kBAACpC,EAAA,EAAD,CACEP,QAAS,WACP6J,IAAmBD,IACP,IAAVJ,IAAeC,GAAU,QACzBhG,QAAQC,IAAI,qBAAuB8F,MAGvC,kBAAChJ,EAAA,EAAD,CACEC,MAAO,CACLoB,cAAe,MACfd,WAAY,aACZe,eAAgB,aAChBuF,WAAY,IAGd,kBAACS,EAAA,EAAD,CACEnI,KAAK,eACLqC,KAAM,GACNuC,MAAM,QACN9D,MAAO,CAAEwB,IAAK,KAEhB,kBAACP,EAAA,EAAD,CAAMjB,MAAO,CAAEuC,SAAU,GAAIqE,WAAY,IAAzC,UAGJ,kBAAC9G,EAAA,EAAD,CACEP,QAAS,WACPyJ,GAAU,IACVI,IAAmBD,IACjBH,GAAU,UACVhG,QAAQC,IAAI,qBAAuB8F,MAGvC,kBAAChJ,EAAA,EAAD,CACEC,MAAO,CACLoB,cAAe,MACfd,WAAY,SACZe,eAAgB,aAChBuF,WAAY,IAGd,kBAACS,EAAA,EAAD,CAAanI,KAAK,eAAeqC,KAAM,GAAIuC,MAAM,UACjD,kBAAC7C,EAAA,EAAD,CAAMjB,MAAO,CAAEuC,SAAU,GAAIqE,WAAY,IAAzC,gBAOV6B,EAyCE,KAxCF,kBAAC1I,EAAA,EAAD,CACEC,MAAO,CACLH,MAAOH,EACPO,OAAQ,GACRC,gBAAiB,OACjBkB,cAAe,MACfwI,OAAQ,EACRtC,SAAU,WACV7G,YAAa,UACbC,aAAc,CACZb,MAAO,EACPI,QAAS,GAEXU,cAAe,GACfC,aAAc,KAEdC,UAAW,IAGb,kBAACf,EAAA,EAAD,CACEE,MAAO,CACLH,MAAO,MACPS,WAAY,SACZe,eAAgB,UAElB9B,QAAS,kBAAMkF,EAAWe,SAAS,UAEnC,kBAACmB,EAAA,EAAD,CAASzH,KAAK,OAAOqC,KAAM,GAAIuC,MAAM,UAEvC,kBAAChE,EAAA,EAAD,CACEE,MAAO,CACLH,MAAO,MACPS,WAAY,SACZe,eAAgB,UAElB9B,QAAS,kBAAMkF,EAAWe,SAAS,aAEnC,kBAACmB,EAAA,EAAD,CAASzH,KAAK,OAAOqC,KAAM,GAAIuC,MAAM,WAK3C,kBAAC+F,EAAA,EAAD,KACE,kBAAC,IAAD,CACEvC,SAAS,SACTC,aAAa,cACb7F,SAAUgD,GACVZ,MAAM,UACN0D,aAAcC,IAAMC,aAClB,kBAAC7D,EAAA,EAAD,CAAiB3E,KAAK,YAAY4E,MAAM,OAAOvC,KAAM,MAEvDoG,YAAa,kBAAMe,GAAQ,OAI9BD,EACC,kBAAC1I,EAAA,EAAD,CACEC,MAAO,CACLH,MAAO,OACPI,OAAQ,OACRC,gBAAiB,sBACjBoH,SAAU,aAGZ,kBAAC,IAAD,CACEwC,KAAK,OACLC,UAAW,GACX/J,MAAO,CAAC4H,IAAWoC,aAAc5B,EAAO6B,oBAExC,kBAAClK,EAAA,EAAD,CAAMC,MAAO,CAAEmB,UAAW,GAAIe,QAAS,EAAGjC,OAAQ,SAChD,kBAACF,EAAA,EAAD,CACEC,MAAO,CACLE,gBAAiB,OACjBD,OAAQ,GACRJ,MAAO,MACPoC,UAAW,SACXb,cAAe,MACfd,WAAY,SACZe,eAAgB,gBAChBhB,aAAc,EACd6B,QAAS,GACTzB,YAAa,UACbC,aAAc,CACZb,MAAO,EACPI,OAAQ,GAEVU,cAAe,IACfC,aAAc,KAEdC,UAAW,IAIb,kBAAC,YAAD,CACEb,MACkB,QAAhBoC,IAASC,IAAgB,CACvBC,aAAc,OACdrC,OAAQ,GACRC,gBAAiB,QACjBL,MAAO,MACPqC,QAAS,EACTK,SAAU,IAGdE,YAAY,mBACZyH,MAAOvB,EACPjG,UAAW+F,EACX9F,SAAU8F,EACV7F,aAAc,SAACC,GACbG,QAAQC,IAAIJ,GAAO+F,EAAQ/F,GA/4B3B,SAACA,GACjB,IAAIsH,EAAUtH,EAAKE,cACnBC,QAAQC,IAAI,YAAckH,GA64BwBC,CAAUvH,MAGhD,kBAAC9C,EAAA,EAAD,CACEC,MAAO,CACLoB,cAAe,MACfC,eAAgB,kBAGjBsH,EACC,kBAAC7I,EAAA,EAAD,CACEP,QAAS,WACPqJ,EAAQ,MAGV,kBAAC7I,EAAA,EAAD,CACEC,MAAO,CACLH,MAAO,GACPI,OAAQ,GACRE,YAAa,EACbC,YAAa,UACbE,WAAY,SACZ2B,UAAW,WACXZ,eAAgB,SAChBgJ,OAAQ,GACRnK,gBAAiB,UACjBG,aAAc,KAGhB,kBAACiK,EAAA,EAAD,CAAWpL,KAAK,QAAQqC,KAAM,GAAIuC,MAAM,cAG1C,OAGR,kBAAC/D,EAAA,EAAD,CAAMC,MAAO,CAAE+H,KAAM,EAAGzH,WAAY,SAAUT,MAAO,SAIzC,OAAT8I,EACC,kBAAC5I,EAAA,EAAD,CACEC,MAAO,CACLH,MAAO,MACPS,WAAY,SACZJ,gBAAiB,OACjBG,aAAc,GACdE,OAAQ,IAGV,kBAACR,EAAA,EAAD,CACEC,MAAO,CACLH,MAAO,OACPS,WAAY,aACZ4B,QAAS,EACT1B,aAAc,GACdW,UAAW,IAGZkI,GAAcvK,OAAS,EACtB,kBAACmC,EAAA,EAAD,CACEjB,MAAO,CACL4G,WAAY,GACZrE,SAAU,GACVrB,WAAY,QAJhB,mBAUA,kBAACD,EAAA,EAAD,CACEjB,MAAO,CACL4G,WAAY,GACZrE,SAAU,GACVrB,WAAY,MACZe,UAAW,WALf,iDAaHoH,GAAchG,KAAI,SAACC,EAAMC,GACxB,OACE,kBAACxD,EAAA,EAAD,CACEC,MAAO,CACLH,MACEH,EAAc,IACVC,IAAWC,IAAI,UAAUC,MAAQ,GACjCF,IAAWC,IAAI,UAAUC,MAAQ,GACvCI,OAAQ,GACRiC,QAAS,EACT7B,aAAc,EACde,cAAe,MACfd,WAAY,SACZe,eAAgB,gBAChBnB,gBAAiB,OACjBK,OAAQ,IAGV,kBAACT,EAAA,EAAD,CACEP,QAAS,WACPuJ,GAAU,GACRJ,GAASD,GACTG,EAAQtF,EAAKpE,QAGjB,kBAACa,EAAA,EAAD,CACEC,MAAO,CACLoB,cAAe,MACfd,WAAY,WAGd,kBAACQ,EAAA,EAAD,CACEC,OAAQ,CAAEC,IAAKsC,EAAK6C,OACpBnG,MAAO,CACLC,OAAQ,GACRJ,MAAO,GACPO,YAAa,QACbD,YAAa,EACbE,aAAc,MAGlB,kBAACY,EAAA,EAAD,CAAMjB,MAAO,CAAEuC,SAAU,KAAzB,IAAiCe,EAAKpE,MACtC,kBAAC+B,EAAA,EAAD,CACEjB,MAAO,CACLuC,SAAU,GACVN,UAAW,SACX6B,MAAO,YAGR,IAPH,KAQK,KAEL,kBAAC7C,EAAA,EAAD,CAAMjB,MAAO,CAAEuC,SAAU,KAAOe,EAAKG,QAGzC,kBAAC3D,EAAA,EAAD,CACEE,MAAO,CACLE,gBAAiB,UACjBD,OAAQ,OACRK,WAAY,SACZe,eAAgB,SAChBa,QAAS,EACT7B,aAAc,EACd4B,UAAW,YAEb1C,QAAS,WACP2J,IAAWD,IACTL,EAAQtF,EAAKG,MACbqF,GAAWD,GACXH,GAASD,KAGb,kBAACxH,EAAA,EAAD,CAAMjB,MAAO,CAAEuC,SAAU,GAAIuB,MAAO,SAApC,QACQR,EAAKG,KADb,WAQR,OAIR,kBAACoG,EAAA,EAAD,KACE,kBAAC,IAAD,CACEvC,SAAS,SACTC,aAAa,cACbzD,MAAM,UACN0D,aAAcC,IAAMC,aAClB,kBAAC7D,EAAA,EAAD,CAAiB3E,KAAK,QAAQ4E,MAAM,OAAOvC,KAAM,MAEnDoG,YAAa,kBAAMlD,EAAWe,SAAS,cAK7C,MAKV,IAAM4C,EAASR,IAAWC,OAAO,CAC/BC,UAAW,CACTC,KAAM,EACN7H,gBAAiB,OACjBI,WAAY,SACZe,eAAgB,YClmCdkJ,EAAMC,cACNC,EAAQC,cAERhL,EAAcC,IAAWC,IAAI,UAAUC,MACxBF,IAAWC,IAAI,UAAUK,OA0E9C,SAAS0K,IACP,OACE,kBAACJ,EAAIK,UAAL,CACEC,cAAe,gBAAGC,EAAH,EAAGA,MAAH,MAAgB,CAC7BC,WAAY,YAA8B,EAA3BC,QAA4B,IACrCC,EADkBnH,EAAkB,EAAlBA,MAAkB,EAAXvC,KAU7B,MAPmB,SAAfuJ,EAAM5L,KACR+L,EAAqB,OACG,YAAfH,EAAM5L,OACf+L,EAAqB,QAIhB,kBAACtE,EAAA,EAAD,CAASzH,KAAM+L,EAAU1J,KAAM,GAAIuC,MAAOA,OAGrDoH,cAAe,CACbC,gBAAiB,UACjBC,kBAAmB,OACnBC,WAAW,EACXrL,MAAO,CACLC,OAAQ,GACRJ,MAAOH,EAAc,IAAM,GAAK,OAChCkK,OAAQlK,EAAc,IAAM,MAAQ,EACpCQ,gBAAiBR,EAAc,IAAM,UAAY,OACjDe,YAAa,UACbC,aAAc,CACZb,MAAO,EACPI,QAAS,GAEXU,cAAe,GACfC,aAAc,KAEdC,UAAW,KAIf,kBAAC0J,EAAIe,OAAL,CAAYpM,KAAK,OAAOqM,UAAW/G,IACnC,kBAAC+F,EAAIe,OAAL,CAAYpM,KAAK,UAAUqM,UAAWpD,KAK7B,SAASqD,EAAT,GAA6B,EAAd/G,WAAe,IAAD,EACV1C,oBAAS,GADC,wBAEhBA,oBAAS,IAFO,qBAI1C,OAcE,kBAAC0J,EAAA,EAAD,CACEC,QAAS,CACPC,SAAU,CAAC,6BACXC,OAAQ,CACNC,QAAS,CACPC,KAAM,CACJC,KAAM,IACNC,iBAAkB,IAClBH,QAAS,CACPrH,KAAM,IACNyH,QAAS,WACTzD,OAAQ,eAMlB0D,SAAU,kBAACjL,EAAA,EAAD,oBAGV,kBAACwJ,EAAMG,UAAP,CACEC,cAAe,CACbsB,aAAa,IAGf,kBAAC1B,EAAMa,OAAP,CAAcpM,KAAK,OAAOqM,UAAWZ,IACrC,kBAACF,EAAMa,OAAP,CAAcpM,KAAK,SAASqM,UAAW/C,MAmDhCZ,IAAWC,OAAO,CAC/BC,UAAW,CACTC,KAAM,EACN7H,gBAAiB,OACjBI,WAAY,SACZe,eAAgB,a,0DC5PpB+K,EAAOC,QAAU,IAA0B,qC","file":"static/js/app.a581b121.chunk.js","sourcesContent":["export function getSmallString(str : string){\n    if(str.length>20){\n        str =str.substring(0,19)+\"...\";\n        return str;\n    }\n    else{\n        return str\n    }\n}\n\n","import { Entypo, MaterialIcons, SimpleLineIcons } from \"@expo/vector-icons\";\nimport React from \"react\";\nimport {\n  Button,\n  StyleSheet,\n  Text,\n  TextInput,\n  View,\n  TouchableOpacity,\n  Dimensions,\n  Image,\n} from \"react-native\";\nimport { getSmallString } from \"../utils/getSmallString\";\n\nexport interface CardProps {\n  name: string;\n  avatar?: string;\n  crop?: string;\n  phone?: number;\n  address?: string;\n  onPress: any;\n  cropAvatar?: string;\n  isCrop?: boolean;\n}\n\nexport default function Card(props: CardProps) {\n  const {\n    name,\n    avatar,\n    crop,\n    phone,\n    address,\n    onPress,\n    cropAvatar,\n    isCrop,\n  } = props;\n\n  const windowWidth = Dimensions.get(\"window\").width;\n  const cardWidth = windowWidth / 2 - 30;\n\n  return (\n    <TouchableOpacity onPress={() => onPress()}>\n      <View\n        style={\n          windowWidth > 767\n            ? {\n                width: 200,\n                height: 185,\n                backgroundColor: \"#fff\",\n                borderWidth: 1,\n                borderColor: \"#fff\",\n                borderRadius: 10,\n                alignItems: \"center\",\n                margin: 5,\n                marginBottom: 5,\n                shadowColor: \"#98A0FF\",\n                shadowOffset: {\n                  width: 0,\n                  height: 3,\n                },\n                shadowOpacity: 0.15,\n                shadowRadius: 2.22,\n\n                elevation: 3,\n              }\n            : {\n                width: windowWidth * 0.45,\n                height: 185,\n                backgroundColor: \"#fff\",\n                borderWidth: 1,\n                borderColor: \"#fff\",\n                borderRadius: 10,\n                alignItems: \"center\",\n                margin: 5,\n\n                shadowColor: \"#98A0FF\",\n                shadowOffset: {\n                  width: 0,\n                  height: 3,\n                },\n                shadowOpacity: 0.15,\n                shadowRadius: 2.22,\n\n                elevation: 3,\n              }\n        }\n      >\n        <Image\n          source={{ uri: avatar }}\n          style={\n            !isCrop\n              ? {\n                  width: 100,\n                  height: 100,\n                  borderWidth: 1,\n                  borderColor: \"#fff\",\n                  borderRadius: 100,\n                }\n              : {\n                  width: 140,\n                  height: 140,\n                  borderWidth: 1,\n                  borderColor: \"#fff\",\n                  borderRadius: 100,\n                }\n          }\n        />\n        <Text style={{ fontWeight: \"500\", marginTop: 10 }}>\n          {getSmallString(name)}\n        </Text>\n\n        {!isCrop ? (\n          <View\n            style={{\n              flexDirection: \"row\",\n              justifyContent: \"space-evenly\",\n              alignItems: \"center\",\n              marginTop: 10,\n            }}\n          >\n            <View\n              style={{\n                flexDirection: \"row\",\n                alignItems: \"center\",\n                justifyContent: \"center\",\n              }}\n            >\n              <Image\n                source={{ uri: cropAvatar }}\n                style={{\n                  height: 15,\n                  width: 15,\n                  borderColor: \"green\",\n                  borderWidth: 1,\n                  borderRadius: 15,\n                }}\n              />\n              <Text> {crop}</Text>\n            </View>\n            <Entypo name=\"dot-single\" size={15} style={{ top: 10 }} />\n            <View>\n              <Text>{address}</Text>\n            </View>\n          </View>\n        ) : null}\n\n        {!isCrop ? (\n          <View>\n            <Text>{phone}</Text>\n          </View>\n        ) : null}\n      </View>\n    </TouchableOpacity>\n  );\n}\n","import { SimpleLineIcons } from \"@expo/vector-icons\";\nimport React, { useState } from \"react\";\nimport {\n  Button,\n  StyleSheet,\n  Text,\n  TextInput,\n  View,\n  TouchableOpacity,\n  Platform,\n  FlatList,\n  ActivityIndicator,\n} from \"react-native\";\nimport Data from \"../data/items.json\";\nimport Farmer from \"../data/farmers.json\";\n\nexport interface SearchProps {\n  visible?: boolean;\n  tapper?: boolean;\n  onHit(): any;\n  isFocused?: boolean;\n  holderValue?: string;\n}\n\nfunction SearchBar(props: SearchProps) {\n  const { visible, onHit, tapper, isFocused, holderValue } = props;\n\n  const [sugg, setsugg] = useState(false);\n  const newdata = [];\n\n  function renderAll(a = []) {\n    for (let i = 0; i < a.length; i++) {\n      return (\n        <View style={{ width: \"100%\", height: 50, backgroundColor: \"yellow\" }}>\n          <Text>{a[i]}</Text>\n        </View>\n      );\n    }\n  }\n\n  return (\n    <View\n      style={{\n        backgroundColor: tapper ? \"#fff\" : \"transparent\",\n        height: \"80%\",\n      }}\n    >\n      <View\n        style={{\n          backgroundColor: \"#fff\",\n          height: 55,\n          width: \"100%\",\n          alignSelf: \"center\",\n          flexDirection: \"row\",\n          alignItems: \"center\",\n          justifyContent: \"space-between\",\n          borderRadius: 8,\n          padding: 5,\n          shadowColor: \"#98A0FF\",\n          shadowOffset: {\n            width: 0,\n            height: 4,\n          },\n          shadowOpacity: 0.32,\n          shadowRadius: 5.46,\n\n          elevation: 9,\n        }}\n      >\n        {/* <TextInput style={{height:40, backgroundColor:\"white\", width:\"75%\", padding:5, outline}} placeholder=\"Search for crops...\" autoFocus={true}/> */}\n        <TextInput\n          style={\n            Platform.OS === \"web\" && {\n              outlineColor: \"#fff\",\n              height: 40,\n              backgroundColor: \"white\",\n              width: \"75%\",\n              padding: 5,\n              fontSize: 20,\n            }\n          }\n          onFocus={onHit}\n          placeholder={holderValue}\n          autoFocus={visible}\n          editable={visible}\n          onChangeText={(text) => {\n            let a = text.toLowerCase();\n            console.log(a);\n            var setting = [];\n            var typer = [];\n\n            {\n              {\n                Data.map((item, cIndex) => setting.push(item.name));\n              }\n            }\n\n            {\n              {\n                Data.map((item, cIndex) => typer.push(item.type));\n              }\n            }\n            console.log(setting);\n            for (let i = 0; i < setting.length; i++) {\n              var b = setting[i].toLowerCase();\n              var c = typer[i].toLowerCase();\n              var result = b.includes(a);\n\n              if (result == true) {\n                newdata.push(setting[i]);\n                console.log(\"New Data : \" + newdata);\n              } else {\n                null;\n              }\n            }\n          }}\n        />\n\n        <View style={{ flexDirection: \"row\", justifyContent: \"space-between\" }}>\n          <TouchableOpacity>\n            <View\n              style={{\n                width: 35,\n                height: 35,\n                borderColor: \"#8790FF\",\n                alignItems: \"center\",\n                justifyContent: \"center\",\n                backgroundColor: \"#3A48ED\",\n                borderRadius: 35,\n              }}\n            >\n              <SimpleLineIcons name=\"magnifier\" size={20} color=\"#fff\" />\n            </View>\n          </TouchableOpacity>\n        </View>\n      </View>\n      <View></View>\n    </View>\n  );\n}\n\nexport default SearchBar;\n","import { SimpleLineIcons } from \"@expo/vector-icons\";\nimport React, { useState } from \"react\";\nimport {\n  Button,\n  StyleSheet,\n  Text,\n  TextInput,\n  View,\n  TouchableOpacity,\n  Platform,\n  Image,\n} from \"react-native\";\nimport SearchBar from \"./SearchBar\";\n\nexport interface ScrollHeaderProps {\n  scrolled?: boolean;\n  visible?: boolean;\n  headerTap(): any;\n  headHolder?: string;\n}\n\nfunction ScrollHeader(props: ScrollHeaderProps) {\n  const [sugg, setsugg] = useState(null);\n  const { scrolled, visible, headerTap, headHolder } = props;\n\n  return (\n    <View\n      style={{\n        width: \"100%\",\n        height: 100,\n        alignItems: \"center\",\n        alignSelf: \"center\",\n        flexDirection: \"column\",\n        justifyContent: \"space-evenly\",\n      }}\n    >\n      <View style={{ marginTop: 40, alignItems: \"center\" }}>\n        <Image\n          source={require(\"../../assets/newlogo.png\")}\n          style={{ width: 100, height: 50 }}\n        />\n      </View>\n\n      <View style={{ marginTop: 5, width: \"100%\" }}>\n        <SearchBar onHit={headerTap} holderValue={headHolder} />\n      </View>\n    </View>\n  );\n}\n\nexport default ScrollHeader;\n","export function hideNumber(phone : number){\n    var a=[];\n    var b;\n    var c;\n    var newString=[];\n    let i=0;\n\n    a = phone.toString().split('');\n    console.log(a)\n    a.splice(1,0,\"X\");\n    a.splice(3,2,\"X\");\n    a.splice(6,5,\"X\");\n    a.splice(1,0,\"X\");\n   \n    console.log('New A'+a)\n    return a;\n\n    \n\n\n}","import { BlurView } from \"expo-blur\";\nimport React, { useRef, useState } from \"react\";\nimport {\n  StyleSheet,\n  Text,\n  View,\n  Image,\n  Button,\n  TouchableOpacity,\n  ScrollView,\n  FlatList,\n  Dimensions,\n  TextInput,\n  Platform,\n  ActivityIndicator,\n} from \"react-native\";\nimport Card from \"../components/Card\";\nimport { Modal } from \"../components/Modal\";\nimport ScrollHeader from \"../components/ScrollHeader\";\nimport SearchBar from \"../components/SearchBar\";\nimport Farmers from \"../data/farmers.json\";\nimport Crops from \"../data/items.json\";\nimport { Modalize } from \"react-native-modalize\";\nimport {\n  Entypo,\n  Feather,\n  FontAwesome,\n  FontAwesome5,\n  Ionicons,\n  SimpleLineIcons,\n} from \"@expo/vector-icons\";\nimport { getSmallString } from \"../utils/getSmallString\";\nimport { hideNumber } from \"../utils/hideNumber\";\nimport Data from \"../data/items.json\";\nimport { FloatingAction } from \"react-native-floating-action\";\n\nexport function Home({ navigation }) {\n  const [showdata, setshowdata] = useState(false);\n  const [showHeader, setshowHeader] = useState(false);\n  const [hideFAB, sethideFAB] = useState(false);\n  const [search, setsearch] = useState({\n    isLoading: true,\n    crops: [],\n  });\n  const [farmer, setfarmer] = useState(0);\n\n  const [homeBlur, sethomeBlur] = useState(false);\n  const windowHeight = Dimensions.get(\"window\").height;\n  const windowWidth = Dimensions.get(\"window\").width;\n  const modalizeRef = useRef<Modalize>(null);\n\n  function renderCrops() {\n    return <Text>Hello</Text>;\n  }\n\n  const modalData = [];\n  function passData(id: number) {\n    {\n      Farmers.map((item, cIndex) => {\n        if (id == item.id) {\n          modalData.push(\n            item.id,\n            item.name,\n            item.address,\n            item.avatar,\n            item.crop,\n            item.phone\n          );\n\n          console.log(modalData);\n        } else {\n          return <Text>No Data found</Text>;\n        }\n      });\n    }\n  }\n  const onOpen = () => {\n    modalizeRef.current?.open();\n  };\n\n  const onClose = () => {\n    modalizeRef.current?.close();\n  };\n\n  const modalHeight = Dimensions.get(\"window\").height;\n  const newHeight = modalHeight * 0.86;\n\n  return (\n    <View style={{ height: windowHeight * 0.97, backgroundColor: \"#EAEAFF\" }}>\n      <View style={{ padding: 6, height: \"100%\" }}>\n        <ScrollHeader\n          headerTap={() => navigation.navigate(\"Search\")}\n          headHolder=\"Search for crops...\"\n        />\n        <Text\n          style={{\n            marginTop: 60,\n            padding: 5,\n            fontWeight: \"500\",\n            color: \"#6F6F6F\",\n          }}\n        >\n          Trending Farmers\n        </Text>\n\n        <ScrollView\n          contentContainerStyle={{\n            flexDirection: \"row\",\n            width: windowWidth > 767 ? \"90%\" : \"100%\",\n            flexWrap: \"wrap\",\n            marginTop: 0,\n            alignItems: \"flex-start\",\n            alignSelf: \"center\",\n            justifyContent: \"flex-start\",\n          }}\n          showsVerticalScrollIndicator={false}\n          bounces={true}\n        >\n          {Farmers.map((item, cIndex) => {\n            return (\n              <Card\n                key={item.id}\n                name={item.name}\n                avatar={item.avatar}\n                phone={item.phone}\n                address={item.address}\n                crop={item.crop}\n                onPress={() => {\n                  setfarmer(item.id),\n                    onOpen(),\n                    passData(item.id),\n                    sethideFAB(true);\n                }}\n                cropAvatar={item.image}\n              />\n            );\n          })}\n        </ScrollView>\n\n        <Modalize\n          ref={modalizeRef}\n          modalHeight={newHeight}\n          threshold={100}\n          modalStyle={\n            windowWidth > 767 ? { width: 500, alignSelf: \"center\" } : null\n          }\n          closeOnOverlayTap={true}\n          mod\n        >\n          {Farmers.map((item, cIndex) => {\n            let kisan = farmer;\n            if (kisan == item.id) {\n              return (\n                <View>\n                  <View\n                    style={{\n                      backgroundColor: \"#3A48ED\",\n                      width: \"100%\",\n                      height: 190,\n                      borderWidth: 1,\n                      top: -2,\n                      borderRadius: 15,\n                      borderColor: \"#3A48ED\",\n                      shadowColor: \"#000\",\n                      shadowOffset: {\n                        width: 0,\n                        height: 4,\n                      },\n                      shadowOpacity: 0.32,\n                      shadowRadius: 5.46,\n\n                      elevation: 9,\n                    }}\n                  >\n                    {/* <Text>{item.name}</Text>\n                        <Text>{item.address}</Text>\n                        <Image source={item.avatar} style={{height:50, width:50}}/>\n                   <Text>{farmer}</Text> */}\n                    <TouchableOpacity\n                      onPress={() => {\n                        onClose(), sethideFAB(false);\n                      }}\n                      style={{\n                        alignItems: \"center\",\n                        marginTop: 5,\n                        marginRight: 2,\n                        padding: 5,\n                        justifyContent: \"center\",\n                        alignSelf: \"flex-end\",\n                        backgroundColor: \"rgba(0,0,0,0.2)\",\n                        borderRadius: 10,\n                        height: 35,\n                        width: 70,\n                      }}\n                    >\n                      <View\n                        style={{\n                          flexDirection: \"row\",\n                          justifyContent: \"space-between\",\n                          alignItems: \"center\",\n                        }}\n                      >\n                        <Text\n                          style={{\n                            fontSize: 15,\n                            fontWeight: 500,\n                            color: \"#fff\",\n                            marginRight: 5,\n                          }}\n                        >\n                          Close\n                        </Text>\n                        <SimpleLineIcons\n                          name=\"close\"\n                          size={15}\n                          color=\"#fff\"\n                          onPress={() => {\n                            onClose(), sethideFAB(false);\n                          }}\n                        />\n                      </View>\n                    </TouchableOpacity>\n                    <View\n                      style={{\n                        flexDirection: \"row\",\n                        alignItems: \"center\",\n                        justifyContent: \"space-between\",\n                        padding: 2,\n                        top: -10,\n                      }}\n                    >\n                      <View\n                        style={{ width: \"40%\", height: \"100%\", padding: 5 }}\n                      >\n                        <Image\n                          source={{ uri: item.avatar }}\n                          style={{\n                            height: 120,\n                            width: 120,\n                            borderRadius: 120,\n                            borderColor: \"#fff\",\n                            borderWidth: 2,\n                          }}\n                        />\n                      </View>\n                      <View\n                        style={{\n                          flexDirection: \"column\",\n                          alignItems: \"center\",\n                          justifyContent: \"space-evenly\",\n                          width: \"60%\",\n                          height: \"100%\",\n                        }}\n                      >\n                        <View\n                          style={{\n                            flexDirection: \"column\",\n                            alignItems: \"flex-start\",\n                            width: \"100%\",\n                            height: \"100%\",\n                            justifyContent: \"space-evenly\",\n                          }}\n                        >\n                          <View style={{ flexDirection: \"row\" }}>\n                            <Feather name=\"user\" size={20} color=\"#fff\" />\n                            <Text\n                              style={{\n                                fontSize: 20,\n                                color: \"#fff\",\n                                fontWeight: \"700\",\n                                marginLeft: 5,\n                              }}\n                            >\n                              {getSmallString(item.name)}\n                            </Text>\n                          </View>\n                          <View style={{ flexDirection: \"row\" }}>\n                            <Feather name=\"map-pin\" size={20} color=\"#fff\" />\n                            <Text\n                              style={{\n                                fontSize: 20,\n                                color: \"#fff\",\n                                fontWeight: \"700\",\n                                marginLeft: 5,\n                              }}\n                            >\n                              {item.address}\n                            </Text>\n                          </View>\n                          <View style={{ flexDirection: \"row\" }}>\n                            <Feather name=\"user\" size={20} color=\"#fff\" />\n                            <Text\n                              style={{\n                                fontSize: 20,\n                                color: \"#fff\",\n                                fontWeight: \"700\",\n                                marginLeft: 5,\n                              }}\n                            >\n                              {hideNumber(item.phone)}\n                            </Text>\n                          </View>\n                        </View>\n                      </View>\n                    </View>\n                    <View style={{ top: -40 }}>\n                      <Text\n                        style={{\n                          marginTop: 60,\n                          padding: 5,\n                          fontWeight: \"500\",\n                          color: \"#6F6F6F\",\n                          fontSize: 20,\n                          marginLeft: 5,\n                        }}\n                      >\n                        Farming Details\n                      </Text>\n                      <View\n                        style={{\n                          width: \"95%\",\n                          alignSelf: \"center\",\n                          height: 1,\n                          backgroundColor: \"#C0C0C0\",\n                        }}\n                      ></View>\n                      <View\n                        style={{\n                          flexDirection: \"column\",\n                          marginTop: 10,\n                          padding: 10,\n                          height: 180,\n                          justifyContent: \"space-between\",\n                        }}\n                      >\n                        <View\n                          style={{\n                            flexDirection: \"row\",\n                            alignItems: \"center\",\n                            width: \"100%\",\n                            justifyContent: \"space-between\",\n                            marginBottom: 10,\n                          }}\n                        >\n                          <View\n                            style={{ flexDirection: \"column\", width: \"50%\" }}\n                          >\n                            <View\n                              style={{\n                                flexDirection: \"row\",\n                                alignItems: \"center\",\n                              }}\n                            >\n                              <Entypo name=\"leaf\" size={20} color=\"#9F99FF\" />\n                              <Text\n                                style={{\n                                  fontSize: 12,\n                                  color: \"#6F6F6F\",\n                                  fontWeight: \"600\",\n                                }}\n                              >\n                                Crop\n                              </Text>\n                            </View>\n                            <View>\n                              {Crops.map((cropName, cIndex) => {\n                                let a = cropName.name.toLowerCase();\n                                let b = item.crop?.toLowerCase();\n                                let result = a.localeCompare(b);\n\n                                if (a == b) {\n                                  return (\n                                    <View\n                                      style={{\n                                        flexDirection: \"row\",\n                                        alignItems: \"center\",\n                                      }}\n                                    >\n                                      <Image\n                                        source={{ uri: cropName.image }}\n                                        style={{\n                                          height: 30,\n                                          width: 30,\n                                          borderWidth: 1,\n                                          borderRadius: 30,\n                                          borderColor: \"#3ECF8E\",\n                                        }}\n                                      />\n                                      <Text\n                                        style={{ fontSize: 30, marginLeft: 5 }}\n                                      >\n                                        {cropName.name}\n                                      </Text>\n                                    </View>\n                                  );\n                                } else {\n                                  null;\n                                }\n                              })}\n                            </View>\n                          </View>\n\n                          <View\n                            style={{\n                              flexDirection: \"column\",\n                              width: \"50%\",\n                              alignItems: \"flex-end\",\n                            }}\n                          >\n                            <View\n                              style={{\n                                flexDirection: \"row\",\n                                alignItems: \"center\",\n                              }}\n                            >\n                              <SimpleLineIcons\n                                name=\"calendar\"\n                                size={20}\n                                color=\"#9F99FF\"\n                              />\n                              <Text\n                                style={{\n                                  fontSize: 12,\n                                  color: \"#6F6F6F\",\n                                  marginLeft: 5,\n                                  fontWeight: \"600\",\n                                }}\n                              >\n                                Harvest Date\n                              </Text>\n                            </View>\n                            <View>\n                              <Text style={{ fontSize: 30, marginLeft: 5 }}>\n                                {item.harvestDate}\n                              </Text>\n                            </View>\n                          </View>\n                        </View>\n                        <View\n                          style={{\n                            flexDirection: \"row\",\n                            alignItems: \"center\",\n                            width: \"100%\",\n                            justifyContent: \"space-between\",\n                            marginTop: 5,\n                          }}\n                        >\n                          <View\n                            style={{ flexDirection: \"column\", width: \"50%\" }}\n                          >\n                            <View\n                              style={{\n                                flexDirection: \"row\",\n                                alignItems: \"center\",\n                              }}\n                            >\n                              <SimpleLineIcons\n                                name=\"size-fullscreen\"\n                                size={20}\n                                color=\"#9F99FF\"\n                              />\n                              <Text\n                                style={{\n                                  fontSize: 12,\n                                  color: \"#6F6F6F\",\n                                  fontWeight: \"600\",\n                                  marginLeft: 5,\n                                }}\n                              >\n                                Farming Area\n                              </Text>\n                            </View>\n                            <View>\n                              <Text style={{ fontSize: 30 }}>\n                                {item.area} Kattha\n                              </Text>\n                            </View>\n                          </View>\n\n                          <View\n                            style={{\n                              flexDirection: \"column\",\n                              width: \"50%\",\n                              alignItems: \"flex-end\",\n                            }}\n                          >\n                            <View\n                              style={{\n                                flexDirection: \"row\",\n                                alignItems: \"center\",\n                              }}\n                            >\n                              <SimpleLineIcons\n                                name=\"speedometer\"\n                                size={20}\n                                color=\"#9F99FF\"\n                              />\n                              <Text\n                                style={{\n                                  fontSize: 12,\n                                  color: \"#6F6F6F\",\n                                  marginLeft: 5,\n                                  fontWeight: \"600\",\n                                }}\n                              >\n                                Quantity\n                              </Text>\n                            </View>\n                            <View>\n                              <Text style={{ fontSize: 30, marginLeft: 5 }}>\n                                {item.quantity} quintal\n                              </Text>\n                            </View>\n                          </View>\n                        </View>\n                        <View></View>\n                      </View>\n                      <View\n                        style={{\n                          width: \"95%\",\n                          alignSelf: \"center\",\n                          height: 1,\n                          backgroundColor: \"#C0C0C0\",\n                          marginTop: 10,\n                        }}\n                      />\n                    </View>\n                    <View\n                      style={{\n                        width: \"100%\",\n                        flexDirection: \"column\",\n                        top: -29,\n                        alignItems: \"center\",\n                      }}\n                    >\n                      <Text\n                        style={{\n                          fontSize: 15,\n                          color: \"#808080\",\n                          marginLeft: 5,\n                        }}\n                      >\n                        Coming soon\n                      </Text>\n                      <View\n                        style={{\n                          width: \"100%\",\n                          flexDirection: \"row\",\n                          alignItems: \"center\",\n                          justifyContent: \"space-evenly\",\n                          top: 5,\n                        }}\n                      >\n                        <TouchableOpacity\n                          style={{\n                            width: 120,\n                            height: 50,\n                            backgroundColor: \"#A9A9A9\",\n                            alignItems: \"center\",\n                            justifyContent: \"center\",\n                            flexDirection: \"row\",\n                            borderRadius: 10,\n                          }}\n                          onPress={() =>\n                            alert(\n                              \"Click to chat feature helps you connect directly to this farmer in one click. Feature Coming soon !\"\n                            )\n                          }\n                        >\n                          <FontAwesome5\n                            name=\"whatsapp\"\n                            size={25}\n                            color=\"#fff\"\n                          />\n                          <Text\n                            style={{\n                              fontSize: 20,\n                              color: \"#fff\",\n                              marginLeft: 5,\n                            }}\n                          >\n                            Chat\n                          </Text>\n                        </TouchableOpacity>\n                        <TouchableOpacity\n                          style={{\n                            width: 120,\n                            height: 50,\n                            backgroundColor: \"#fff\",\n                            alignItems: \"center\",\n                            justifyContent: \"center\",\n                            flexDirection: \"row\",\n                            borderRadius: 10,\n                            borderColor: \"#A9A9A9\",\n                            borderWidth: 2,\n                          }}\n                          onPress={() =>\n                            alert(\n                              \"Support the farmer by any kind. Feature Coming Soon !\"\n                            )\n                          }\n                        >\n                          <FontAwesome\n                            name=\"handshake-o\"\n                            size={25}\n                            color=\"#A9A9A9\"\n                          />\n                          <Text\n                            style={{\n                              fontSize: 20,\n                              color: \"#A9A9A9\",\n                              marginLeft: 5,\n                            }}\n                          >\n                            Support\n                          </Text>\n                        </TouchableOpacity>\n                      </View>\n                    </View>\n                  </View>\n                </View>\n              );\n            } else {\n              null;\n            }\n          })}\n        </Modalize>\n      </View>\n      {/* {homeBlur?(\n      <View style={{width:\"100%\", height:\"100%\",backgroundColor: 'rgba(0, 0, 0, 0.65)', position:\"absolute\"}}> \n       <BlurView tint=\"dark\" intensity={40} style={[StyleSheet.absoluteFill, styles.nonBlurredContent]}>\n        <View style={{marginTop:20,padding:5, height:\"100%\"}}>\n\n       <View style={{ backgroundColor:\"#fff\",height:55, width:\"100%\", alignSelf:\"center\", flexDirection:\"row\", alignItems:\"center\", justifyContent:\"space-between\", borderRadius:8, padding:5, shadowColor: \"#98A0FF\",\n        shadowOffset: {\n            width: 0,\n            height: 4,\n        },\n        shadowOpacity: 0.32,\n        shadowRadius: 5.46,\n        \n        elevation: 9,}}>\n            <TextInput style={Platform.OS === \"web\" && {outlineColor: \"#fff\",height:40, backgroundColor:\"white\", width:\"75%\", padding:5,fontSize:20 }}\n            placeholder=\"Search for crops...\" autoFocus={homeBlur}  editable={homeBlur}\n            onFocus={()=>navigation.navigate('Search')}\n            />\n        \n              \n\n       </View>\n       <View style={{flex:1,backgroundColor:\"transparent\"}}>\n                {search.isLoading?\n                <View style={{...StyleSheet.absoluteFill,alignItems:'center',justifyContent:'center'}}>\n                        <ActivityIndicator size=\"large\" color=\"blue\"/>\n                 </View> : null  \n                }\n               \n            </View>\n          \n          <TouchableOpacity onPress={()=>sethomeBlur(!homeBlur)}>\n                Press Me\n          </TouchableOpacity>\n        </View>\n      </BlurView>\n      </View>\n     \n    ):null} */}\n      <View\n        style={{\n          width: \"100%\",\n          backgroundColor: \"transparent\",\n          height: 50,\n          top: -42,\n        }}\n      >\n        <FloatingAction\n          position=\"center\"\n          visible={!hideFAB}\n          overlayColor=\"transparent\"\n          color=\"#3A48ED\"\n          floatingIcon={React.cloneElement(\n            <SimpleLineIcons name=\"magnifier\" color=\"#fff\" size={30} />\n          )}\n          onPressMain={() => navigation.navigate(\"Search\")}\n        />\n      </View>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#EAEAFF\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n});\n","import React, { useRef } from \"react\";\nimport { View, Text, TouchableOpacity, Button, Dimensions } from \"react-native\";\nimport { Modalize } from \"react-native-modalize\";\n\nexport interface ModalProps {\n  showModal?: boolean;\n}\nexport const Modal = (props: ModalProps) => {\n  const modalizeRef = useRef<Modalize>(null);\n\n  const onOpen = () => {\n    modalizeRef.current?.open();\n  };\n\n  const onClose = () => {\n    modalizeRef.current?.close();\n  };\n\n  const modalHeight = Dimensions.get(\"window\").height;\n  const newHeight = modalHeight * 0.99;\n\n  const { showModal } = props;\n  return (\n    <>\n      <TouchableOpacity onPress={onOpen}>\n        <Text>Open the modal</Text>\n      </TouchableOpacity>\n\n      <Modalize\n        ref={modalizeRef}\n        modalHeight={newHeight}\n        threshold={100}\n        closeOnOverlayTap={true}\n        childrenStyle={{\n          flex: 1,\n          backgroundColor: \"#fff\",\n          alignItems: \"center\",\n          justifyContent: \"center\",\n        }}\n        modalStyle={{ backgroundColor: \"red\" }}\n      >\n        <TouchableOpacity onPress={() => onClose()}>\n          Press here\n        </TouchableOpacity>\n      </Modalize>\n    </>\n  );\n};\n","import React from \"react\";\nimport {\n  StyleSheet,\n  Text,\n  View,\n  Image,\n  Button,\n  TouchableOpacity,\n  ScrollView,\n} from \"react-native\";\nimport { Modal } from \"../components/Modal\";\n\nexport function Profile({ navigation }) {\n  return (\n    <ScrollView showsVerticalScrollIndicator={false}>\n      <View>\n        <View\n          style={[\n            styles.container,\n            {\n              justifyContent: \"center\",\n              alignContent: \"flex-start\",\n              padding: 10,\n            },\n          ]}\n        >\n          <Text>Krisearch</Text>\n        </View>\n        <View\n          style={{\n            width: \"100%\",\n            backgroundColor: \"red\",\n            padding: 5,\n            height: 60,\n            justifyContent: \"space-between\",\n            top: 20,\n            flexDirection: \"column\",\n          }}\n        >\n          <Text style={{ fontSize: 16, color: \"#3A48ED\" }}>Namaste</Text>\n          <Text style={{ fontSize: 16, color: \"#14142B\", fontWeight: \"bold\" }}>\n            Lets discover farmers\n          </Text>\n          <Button\n            title=\"GO to Search\"\n            onPress={() => navigation.navigate(\"Search\")}\n          />\n        </View>\n\n        <View style={{ marginTop: 50, padding: 6, height: \"100%\" }}>\n          <Text>We are in Profile</Text>\n          <Modal />\n        </View>\n      </View>\n    </ScrollView>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n});\n","import {\n  AntDesign,\n  Entypo,\n  Feather,\n  FontAwesome,\n  FontAwesome5,\n  SimpleLineIcons,\n} from \"@expo/vector-icons\";\nimport { BlurView } from \"expo-blur\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport {\n  StyleSheet,\n  Text,\n  View,\n  Image,\n  Button,\n  TouchableOpacity,\n  ScrollView,\n  Dimensions,\n  Platform,\n  KeyboardAvoidingView,\n} from \"react-native\";\nimport { FloatingAction } from \"react-native-floating-action\";\nimport { TextInput } from \"react-native-gesture-handler\";\nimport Card from \"../components/Card\";\nimport ScrollHeader from \"../components/ScrollHeader\";\nimport SearchBar from \"../components/SearchBar\";\nimport Farmers from \"../data/farmers.json\";\nimport Data from \"../data/items.json\";\nimport { Modalize } from \"react-native-modalize\";\nimport { hideNumber } from \"../utils/hideNumber\";\nimport { getSmallString } from \"../utils/getSmallString\";\nimport { floor } from \"react-native-reanimated\";\n\nconst windowHeight = Dimensions.get(\"window\").height;\nconst modalHeight = Dimensions.get(\"window\").height;\nconst newHeight = modalHeight * 0.86;\nconst windowWidth = Dimensions.get(\"window\").width;\nconst renderModal = windowHeight * 1.5;\n\nexport function Search({ navigation }) {\n  const [blur, setblur] = useState(true);\n  const [term, setterm] = useState(\"\");\n  const [placer, setplacer] = useState(false);\n  const [farmer, setfarmer] = useState(0);\n  const [openFilter, setopenFilter] = useState(false);\n  const [toggleCheckBox, setToggleCheckBox] = useState(false);\n  const [gender, setgender] = useState(\"\");\n  const [hideFAB, sethideFAB] = useState(false);\n  const [parent, setparent] = useState(false);\n  const [genderSelected, setgenderSelected] = useState(false);\n\n  const setSearch = (text: string) => {\n    let dynamic = text.toLowerCase();\n    console.log(\"dynamic: \" + dynamic);\n  };\n\n  const filteredCrops = Data.filter((item) => {\n    return item.name.toLocaleLowerCase().includes(term.toLowerCase());\n  });\n\n  const filteredParents = Data.filter((item) => {\n    return item.type.toLocaleLowerCase().includes(term.toLowerCase());\n  });\n\n  const filteredFarmers = Farmers.filter((item) => {\n    return item.crop.toLocaleLowerCase().includes(term.toLowerCase());\n  });\n\n  const genderFilter = filteredFarmers.filter((item) => {\n    return item.gender.toLocaleLowerCase().includes(term.toLowerCase());\n  });\n\n  const modalizeRef = useRef<Modalize>(null);\n\n  const onOpen = () => {\n    modalizeRef.current?.open();\n  };\n\n  const onOpenfilter = () => {\n    modalizeRef.current?.open();\n  };\n\n  const onCloseFilter = () => {\n    modalizeRef.current?.close();\n  };\n\n  const onClose = () => {\n    modalizeRef.current?.close();\n  };\n\n  return (\n    <View style={{ backgroundColor: \"red \", flexDirection: \"column\" }}>\n      <View style={{ height: windowHeight, backgroundColor: \"#EAEAFF\" }}>\n        <View style={{ padding: 6, height: \"100%\" }}>\n          <ScrollHeader\n            headerTap={() => {\n              setblur(!blur), setterm(\"\"), setparent(false);\n            }}\n            headHolder={placer && parent ? term : parent ? term : \"Search\"}\n          />\n          {placer ? (\n            !parent ? (\n              <View\n                style={{\n                  width: \"100%\",\n                  flexDirection: \"row\",\n                  alignItems: \"center\",\n                  justifyContent: \"space-between\",\n                }}\n              >\n                <Text\n                  style={{\n                    marginTop: 60,\n                    padding: 5,\n                    fontWeight: \"500\",\n                    color: \"#6F6F6F\",\n                  }}\n                >\n                  {term}\n                </Text>\n                <TouchableOpacity\n                  style={{ top: 30 }}\n                  onPress={() => {\n                    console.log(\"Biharma\"), onOpenfilter();\n                  }}\n                >\n                  Filter\n                </TouchableOpacity>\n              </View>\n            ) : (\n              <View>\n                <Text\n                  style={{\n                    marginTop: 60,\n                    padding: 5,\n                    fontWeight: \"500\",\n                    color: \"#6F6F6F\",\n                  }}\n                >\n                  {term}\n                </Text>\n              </View>\n            )\n          ) : parent ? (\n            <View>\n              <Text\n                style={{\n                  marginTop: 60,\n                  padding: 5,\n                  fontWeight: \"500\",\n                  color: \"#6F6F6F\",\n                }}\n              >\n                {term}\n              </Text>\n            </View>\n          ) : (\n            <View\n              style={{\n                width: \"100%\",\n                flexDirection: \"row\",\n                alignItems: \"center\",\n                justifyContent: \"space-between\",\n              }}\n            >\n              <Text\n                style={{\n                  marginTop: 60,\n                  padding: 5,\n                  fontWeight: \"500\",\n                  color: \"#6F6F6F\",\n                }}\n              >\n                {term}\n              </Text>\n              <TouchableOpacity\n                style={{ top: 30 }}\n                onPress={() => console.log(\"Biharma\")}\n              >\n                Filter\n              </TouchableOpacity>\n            </View>\n          )}\n          {/* {placer ? (\n            <TouchableOpacity\n              style={{ alignSelf: \"flex-end\", top: -23, width: 50, height: 20 }}\n              onPress={() => {\n                onOpenfilter();\n              }}\n            >\n              Filter\n            </TouchableOpacity>\n          ) : null} */}\n\n          <ScrollView showsVerticalScrollIndicator={false} bounces={true}>\n            {parent ? (\n              <View\n                style={{\n                  flexDirection: \"row\",\n                  width: windowWidth > 767 ? \"90%\" : \"100%\",\n                  flexWrap: \"wrap\",\n                  marginTop: 0,\n                  alignItems: \"flex-start\",\n                  justifyContent: \"flex-start\",\n                  alignSelf: \"center\",\n                }}\n              >\n                {filteredParents.map((item, cIndex) => {\n                  return (\n                    <Card\n                      key={item.id}\n                      name={item.name}\n                      avatar={item.image}\n                      isCrop={true}\n                      onPress={() => {\n                        setparent(!parent), setterm(item.name);\n                      }}\n                    />\n                  );\n                })}\n              </View>\n            ) : (\n              <View\n                style={{\n                  flexDirection: \"row\",\n                  width: windowWidth > 767 ? \"90%\" : \"100%\",\n                  flexWrap: \"wrap\",\n                  marginTop: 0,\n                  alignItems: \"flex-start\",\n                  justifyContent: \"flex-start\",\n                  alignSelf: \"center\",\n                }}\n              >\n                {filteredFarmers.map((item, cIndex) => {\n                  return (\n                    <Card\n                      key={item.id}\n                      name={item.name}\n                      avatar={item.avatar}\n                      phone={item.phone}\n                      address={item.address}\n                      crop={item.crop}\n                      onPress={() => {\n                        setfarmer(item.id), onOpen(), sethideFAB(true);\n                      }}\n                      cropAvatar={item.image}\n                    />\n                  );\n                })}\n              </View>\n            )}\n          </ScrollView>\n          <Modalize\n            ref={modalizeRef}\n            modalHeight={newHeight}\n            modalStyle={\n              windowWidth > 767 ? { width: 500, alignSelf: \"center\" } : null\n            }\n            threshold={100}\n            closeOnOverlayTap={true}\n            mod\n          >\n            {filteredFarmers.map((item, cIndex) => {\n              let kisan = farmer;\n              if (kisan == item.id) {\n                return (\n                  <View>\n                    <View\n                      style={{\n                        backgroundColor: \"#3A48ED\",\n                        width: \"100%\",\n                        height: 190,\n                        borderWidth: 1,\n                        top: -2,\n                        borderRadius: 15,\n                        borderColor: \"#3A48ED\",\n                        shadowColor: \"#000\",\n                        shadowOffset: {\n                          width: 0,\n                          height: 4,\n                        },\n                        shadowOpacity: 0.32,\n                        shadowRadius: 5.46,\n\n                        elevation: 11,\n                      }}\n                    >\n                      {/* <Text>{item.name}</Text>\n                        <Text>{item.address}</Text>\n                        <Image source={item.avatar} style={{height:50, width:50}}/>\n                   <Text>{farmer}</Text> */}\n                      <TouchableOpacity\n                        onPress={() => {\n                          onClose(), sethideFAB(false);\n                        }}\n                        style={{\n                          alignItems: \"center\",\n                          marginTop: 5,\n                          marginRight: 2,\n                          padding: 5,\n                          justifyContent: \"center\",\n                          alignSelf: \"flex-end\",\n                          backgroundColor: \"rgba(0,0,0,0.2)\",\n                          borderRadius: 10,\n                          height: 35,\n                          width: 70,\n                        }}\n                      >\n                        <View\n                          style={{\n                            flexDirection: \"row\",\n                            justifyContent: \"space-between\",\n                            alignItems: \"center\",\n                          }}\n                        >\n                          <Text\n                            style={{\n                              fontSize: 15,\n                              fontWeight: 500,\n                              color: \"#fff\",\n                              marginRight: 5,\n                            }}\n                          >\n                            Close\n                          </Text>\n                          <SimpleLineIcons\n                            name=\"close\"\n                            size={15}\n                            color=\"#fff\"\n                            onPress={() => {\n                              onClose(), sethideFAB(false);\n                            }}\n                          />\n                        </View>\n                      </TouchableOpacity>\n                      <View\n                        style={{\n                          flexDirection: \"row\",\n                          alignItems: \"center\",\n                          justifyContent: \"space-between\",\n                          padding: 2,\n                          top: -10,\n                        }}\n                      >\n                        <View\n                          style={{ width: \"40%\", height: \"100%\", padding: 5 }}\n                        >\n                          <Image\n                            source={{ uri: item.avatar }}\n                            style={{\n                              height: 120,\n                              width: 120,\n                              borderRadius: 120,\n                              borderColor: \"#fff\",\n                              borderWidth: 2,\n                            }}\n                          />\n                        </View>\n                        <View\n                          style={{\n                            flexDirection: \"column\",\n                            alignItems: \"center\",\n                            justifyContent: \"space-evenly\",\n                            width: \"60%\",\n                            height: \"100%\",\n                          }}\n                        >\n                          <View\n                            style={{\n                              flexDirection: \"column\",\n                              alignItems: \"flex-start\",\n                              width: \"100%\",\n                              height: \"100%\",\n                              justifyContent: \"space-evenly\",\n                            }}\n                          >\n                            <View style={{ flexDirection: \"row\" }}>\n                              <Feather name=\"user\" size={20} color=\"#fff\" />\n                              <Text\n                                style={{\n                                  fontSize: 20,\n                                  color: \"#fff\",\n                                  fontWeight: \"700\",\n                                  marginLeft: 5,\n                                }}\n                              >\n                                {getSmallString(item.name)}\n                              </Text>\n                            </View>\n                            <View style={{ flexDirection: \"row\" }}>\n                              <Feather name=\"map-pin\" size={20} color=\"#fff\" />\n                              <Text\n                                style={{\n                                  fontSize: 20,\n                                  color: \"#fff\",\n                                  fontWeight: \"700\",\n                                  marginLeft: 5,\n                                }}\n                              >\n                                {item.address}\n                              </Text>\n                            </View>\n                            <View style={{ flexDirection: \"row\" }}>\n                              <Feather name=\"user\" size={20} color=\"#fff\" />\n                              <Text\n                                style={{\n                                  fontSize: 20,\n                                  color: \"#fff\",\n                                  fontWeight: \"700\",\n                                  marginLeft: 5,\n                                }}\n                              >\n                                {hideNumber(item.phone)}\n                              </Text>\n                            </View>\n                          </View>\n                        </View>\n                      </View>\n                      <View style={{ top: -40 }}>\n                        <Text\n                          style={{\n                            marginTop: 60,\n                            padding: 5,\n                            fontWeight: \"500\",\n                            color: \"#6F6F6F\",\n                            fontSize: 20,\n                            marginLeft: 5,\n                          }}\n                        >\n                          Farming Details\n                        </Text>\n                        <View\n                          style={{\n                            width: \"95%\",\n                            alignSelf: \"center\",\n                            height: 1,\n                            backgroundColor: \"#C0C0C0\",\n                          }}\n                        ></View>\n                        <View\n                          style={{\n                            flexDirection: \"column\",\n                            marginTop: 10,\n                            padding: 10,\n                            height: 180,\n                            justifyContent: \"space-between\",\n                          }}\n                        >\n                          <View\n                            style={{\n                              flexDirection: \"row\",\n                              alignItems: \"center\",\n                              width: \"100%\",\n                              justifyContent: \"space-between\",\n                              marginBottom: 10,\n                            }}\n                          >\n                            <View\n                              style={{\n                                flexDirection: \"column\",\n                                width: \"50%\",\n                              }}\n                            >\n                              <View\n                                style={{\n                                  flexDirection: \"row\",\n                                  alignItems: \"center\",\n                                }}\n                              >\n                                <Entypo name=\"leaf\" size={20} color=\"#9F99FF\" />\n                                <Text\n                                  style={{\n                                    fontSize: 12,\n                                    color: \"#6F6F6F\",\n                                    fontWeight: \"600\",\n                                  }}\n                                >\n                                  Crop\n                                </Text>\n                              </View>\n                              <View>\n                                {Data.map((cropName, cIndex) => {\n                                  let a = cropName.name.toLowerCase();\n                                  let b = item.crop?.toLowerCase();\n                                  let result = a.localeCompare(b);\n\n                                  if (a == b) {\n                                    return (\n                                      <View\n                                        style={{\n                                          flexDirection: \"row\",\n                                          alignItems: \"center\",\n                                        }}\n                                      >\n                                        <Image\n                                          source={{ uri: cropName.image }}\n                                          style={{\n                                            height: 30,\n                                            width: 30,\n                                            borderWidth: 1,\n                                            borderRadius: 30,\n                                            borderColor: \"#3ECF8E\",\n                                          }}\n                                        />\n                                        <Text\n                                          style={{\n                                            fontSize: 30,\n                                            marginLeft: 5,\n                                          }}\n                                        >\n                                          {cropName.name}\n                                        </Text>\n                                      </View>\n                                    );\n                                  } else {\n                                    null;\n                                  }\n                                })}\n                              </View>\n                            </View>\n\n                            <View\n                              style={{\n                                flexDirection: \"column\",\n                                width: \"50%\",\n                                alignItems: \"flex-end\",\n                              }}\n                            >\n                              <View\n                                style={{\n                                  flexDirection: \"row\",\n                                  alignItems: \"center\",\n                                }}\n                              >\n                                <SimpleLineIcons\n                                  name=\"calendar\"\n                                  size={20}\n                                  color=\"#9F99FF\"\n                                />\n                                <Text\n                                  style={{\n                                    fontSize: 12,\n                                    color: \"#6F6F6F\",\n                                    marginLeft: 5,\n                                    fontWeight: \"600\",\n                                  }}\n                                >\n                                  Harvest Date\n                                </Text>\n                              </View>\n                              <View>\n                                <Text style={{ fontSize: 30, marginLeft: 5 }}>\n                                  {item.harvestDate}\n                                </Text>\n                              </View>\n                            </View>\n                          </View>\n                          <View\n                            style={{\n                              flexDirection: \"row\",\n                              alignItems: \"center\",\n                              width: \"100%\",\n                              justifyContent: \"space-between\",\n                              marginTop: 5,\n                            }}\n                          >\n                            <View\n                              style={{\n                                flexDirection: \"column\",\n                                width: \"50%\",\n                              }}\n                            >\n                              <View\n                                style={{\n                                  flexDirection: \"row\",\n                                  alignItems: \"center\",\n                                }}\n                              >\n                                <SimpleLineIcons\n                                  name=\"size-fullscreen\"\n                                  size={20}\n                                  color=\"#9F99FF\"\n                                />\n                                <Text\n                                  style={{\n                                    fontSize: 12,\n                                    color: \"#6F6F6F\",\n                                    fontWeight: \"600\",\n                                    marginLeft: 5,\n                                  }}\n                                >\n                                  Farming Area\n                                </Text>\n                              </View>\n                              <View>\n                                <Text style={{ fontSize: 30 }}>\n                                  {item.area} Kattha\n                                </Text>\n                              </View>\n                            </View>\n\n                            <View\n                              style={{\n                                flexDirection: \"column\",\n                                width: \"50%\",\n                                alignItems: \"flex-end\",\n                              }}\n                            >\n                              <View\n                                style={{\n                                  flexDirection: \"row\",\n                                  alignItems: \"center\",\n                                }}\n                              >\n                                <SimpleLineIcons\n                                  name=\"speedometer\"\n                                  size={20}\n                                  color=\"#9F99FF\"\n                                />\n                                <Text\n                                  style={{\n                                    fontSize: 12,\n                                    color: \"#6F6F6F\",\n                                    marginLeft: 5,\n                                    fontWeight: \"600\",\n                                  }}\n                                >\n                                  Quantity\n                                </Text>\n                              </View>\n                              <View>\n                                <Text style={{ fontSize: 30, marginLeft: 5 }}>\n                                  {item.quantity} quintal\n                                </Text>\n                              </View>\n                            </View>\n                          </View>\n                          <View></View>\n                        </View>\n                        <View\n                          style={{\n                            width: \"95%\",\n                            alignSelf: \"center\",\n                            height: 1,\n                            backgroundColor: \"#C0C0C0\",\n                            marginTop: 10,\n                          }}\n                        />\n                      </View>\n                      <View\n                        style={{\n                          width: \"100%\",\n                          flexDirection: \"column\",\n                          top: -29,\n                          alignItems: \"center\",\n                        }}\n                      >\n                        <Text\n                          style={{\n                            fontSize: 15,\n                            color: \"#808080\",\n                            marginLeft: 5,\n                          }}\n                        >\n                          Coming soon\n                        </Text>\n                        <View\n                          style={{\n                            width: \"100%\",\n                            flexDirection: \"row\",\n                            alignItems: \"center\",\n                            justifyContent: \"space-evenly\",\n                            top: 5,\n                          }}\n                        >\n                          <TouchableOpacity\n                            style={{\n                              width: 120,\n                              height: 50,\n                              backgroundColor: \"#A9A9A9\",\n                              alignItems: \"center\",\n                              justifyContent: \"center\",\n                              flexDirection: \"row\",\n                              borderRadius: 10,\n                            }}\n                            onPress={() =>\n                              alert(\n                                \"Click to chat feature helps you connect directly to this farmer in one click. Feature Coming soon !\"\n                              )\n                            }\n                          >\n                            <FontAwesome5\n                              name=\"whatsapp\"\n                              size={25}\n                              color=\"#fff\"\n                            />\n                            <Text\n                              style={{\n                                fontSize: 20,\n                                color: \"#fff\",\n                                marginLeft: 5,\n                              }}\n                            >\n                              Chat\n                            </Text>\n                          </TouchableOpacity>\n                          <TouchableOpacity\n                            style={{\n                              width: 120,\n                              height: 50,\n                              backgroundColor: \"#fff\",\n                              alignItems: \"center\",\n                              justifyContent: \"center\",\n                              flexDirection: \"row\",\n                              borderRadius: 10,\n                              borderColor: \"#A9A9A9\",\n                              borderWidth: 2,\n                            }}\n                            onPress={() =>\n                              alert(\n                                \"Support the farmer by any kind. Feature Coming Soon !\"\n                              )\n                            }\n                          >\n                            <FontAwesome\n                              name=\"handshake-o\"\n                              size={25}\n                              color=\"#A9A9A9\"\n                            />\n                            <Text\n                              style={{\n                                fontSize: 20,\n                                color: \"#A9A9A9\",\n                                marginLeft: 5,\n                              }}\n                            >\n                              Support\n                            </Text>\n                          </TouchableOpacity>\n                        </View>\n                      </View>\n                    </View>\n                  </View>\n                );\n              } else {\n                null;\n              }\n            })}\n          </Modalize>\n\n          <Modalize\n            ref={modalizeRef}\n            modalHeight={newHeight}\n            modalStyle={\n              windowWidth > 767 ? { width: 500, alignSelf: \"center\" } : null\n            }\n            threshold={100}\n            closeOnOverlayTap={true}\n            mod\n          >\n            <View\n              style={{\n                width: \"100%\",\n                flexDirection: \"row\",\n                alignItems: \"center\",\n                justifyContent: \"space-between\",\n                padding: 5,\n              }}\n            >\n              <Text\n                style={{\n                  padding: 5,\n                  fontWeight: \"500\",\n                  color: \"#6F6F6F\",\n                  fontSize: 20,\n                  marginLeft: 5,\n                }}\n              >\n                Filter resuts here\n              </Text>\n              <TouchableOpacity onPress={() => onCloseFilter()}>\n                Close Filter\n              </TouchableOpacity>\n            </View>\n            <View\n              style={{\n                width: \"95%\",\n                alignSelf: \"flex-start\",\n                height: 1,\n                backgroundColor: \"#C0C0C0\",\n                marginTop: 10,\n                alignItems: \"flex-start\",\n              }}\n            ></View>\n            <Text>By gender</Text>\n            <View\n              style={{\n                width: \"100%\",\n                flexDirection: \"row\",\n                alignItems: \"center\",\n                justifyContent: \"flex-start\",\n                padding: 5,\n              }}\n            >\n              <TouchableOpacity\n                onPress={() => {\n                  setgenderSelected(!genderSelected),\n                    gender == \"\" ? setgender(\"male\") : \"\",\n                    console.log(\"Selected Value is:\" + gender);\n                }}\n              >\n                <View\n                  style={{\n                    flexDirection: \"row\",\n                    alignItems: \"flex-start\",\n                    justifyContent: \"flex-start\",\n                    marginLeft: 5,\n                  }}\n                >\n                  <FontAwesome\n                    name=\"dot-circle-o\"\n                    size={20}\n                    color=\"black\"\n                    style={{ top: 2 }}\n                  />\n                  <Text style={{ fontSize: 20, marginLeft: 3 }}>Male</Text>\n                </View>\n              </TouchableOpacity>\n              <TouchableOpacity\n                onPress={() => {\n                  setgender(\"\");\n                  setgenderSelected(!genderSelected),\n                    setgender(\"female\"),\n                    console.log(\"Selected Value is:\" + gender);\n                }}\n              >\n                <View\n                  style={{\n                    flexDirection: \"row\",\n                    alignItems: \"center\",\n                    justifyContent: \"flex-start\",\n                    marginLeft: 5,\n                  }}\n                >\n                  <FontAwesome name=\"dot-circle-o\" size={20} color=\"black\" />\n                  <Text style={{ fontSize: 20, marginLeft: 3 }}>Female</Text>\n                </View>\n              </TouchableOpacity>\n            </View>\n          </Modalize>\n        </View>\n      </View>\n      {!blur ? (\n        <View\n          style={{\n            width: windowWidth,\n            height: 30,\n            backgroundColor: \"#fff\",\n            flexDirection: \"row\",\n            bottom: 0,\n            position: \"absolute\",\n            shadowColor: \"#98A0FF\",\n            shadowOffset: {\n              width: 0,\n              height: -2,\n            },\n            shadowOpacity: 0.2,\n            shadowRadius: 5.46,\n\n            elevation: 9,\n          }}\n        >\n          <TouchableOpacity\n            style={{\n              width: \"50%\",\n              alignItems: \"center\",\n              justifyContent: \"center\",\n            }}\n            onPress={() => navigation.navigate(\"Home\")}\n          >\n            <Feather name=\"home\" size={25} color=\"gray\" />\n          </TouchableOpacity>\n          <TouchableOpacity\n            style={{\n              width: \"50%\",\n              alignItems: \"center\",\n              justifyContent: \"center\",\n            }}\n            onPress={() => navigation.navigate(\"Profile\")}\n          >\n            <Feather name=\"user\" size={25} color=\"gray\" />\n          </TouchableOpacity>\n        </View>\n      ) : null}\n\n      <KeyboardAvoidingView>\n        <FloatingAction\n          position=\"center\"\n          overlayColor=\"transparent\"\n          visible={!hideFAB}\n          color=\"#3A48ED\"\n          floatingIcon={React.cloneElement(\n            <SimpleLineIcons name=\"magnifier\" color=\"#fff\" size={30} />\n          )}\n          onPressMain={() => setblur(true)}\n        />\n      </KeyboardAvoidingView>\n\n      {blur ? (\n        <View\n          style={{\n            width: \"100%\",\n            height: \"100%\",\n            backgroundColor: \"rgba(0, 0, 0, 0.85)\",\n            position: \"absolute\",\n          }}\n        >\n          <BlurView\n            tint=\"dark\"\n            intensity={40}\n            style={[StyleSheet.absoluteFill, styles.nonBlurredContent]}\n          >\n            <View style={{ marginTop: 20, padding: 5, height: \"100%\" }}>\n              <View\n                style={{\n                  backgroundColor: \"#fff\",\n                  height: 55,\n                  width: \"97%\",\n                  alignSelf: \"center\",\n                  flexDirection: \"row\",\n                  alignItems: \"center\",\n                  justifyContent: \"space-between\",\n                  borderRadius: 8,\n                  padding: 20,\n                  shadowColor: \"#98A0FF\",\n                  shadowOffset: {\n                    width: 0,\n                    height: 4,\n                  },\n                  shadowOpacity: 0.32,\n                  shadowRadius: 5.46,\n\n                  elevation: 9,\n                }}\n              >\n                {/* <TextInput style={{height:40, backgroundColor:\"white\", width:\"75%\", padding:5, outline}} placeholder=\"Search for crops...\" autoFocus={true}/> */}\n                <TextInput\n                  style={\n                    Platform.OS === \"web\" && {\n                      outlineColor: \"#fff\",\n                      height: 40,\n                      backgroundColor: \"white\",\n                      width: \"95%\",\n                      padding: 5,\n                      fontSize: 20,\n                    }\n                  }\n                  placeholder=\"Search for Crops\"\n                  value={term}\n                  autoFocus={blur}\n                  editable={blur}\n                  onChangeText={(text) => {\n                    console.log(text), setterm(text), setSearch(text);\n                  }}\n                />\n                <View\n                  style={{\n                    flexDirection: \"row\",\n                    justifyContent: \"space-between\",\n                  }}\n                >\n                  {term ? (\n                    <TouchableOpacity\n                      onPress={() => {\n                        setterm(\"\");\n                      }}\n                    >\n                      <View\n                        style={{\n                          width: 25,\n                          height: 25,\n                          borderWidth: 2,\n                          borderColor: \"#A1C7FF\",\n                          alignItems: \"center\",\n                          alignSelf: \"flex-end\",\n                          justifyContent: \"center\",\n                          right: -10,\n                          backgroundColor: \"#A1C7FF\",\n                          borderRadius: 25,\n                        }}\n                      >\n                        <AntDesign name=\"close\" size={20} color=\"#3A48ED\" />\n                      </View>\n                    </TouchableOpacity>\n                  ) : null}\n                </View>\n              </View>\n              <View style={{ flex: 1, alignItems: \"center\", width: \"100%\" }}>\n                {/* <TouchableOpacity style={{width:\"100%\", height:30, alignItems:\"center\", justifyContent:\"center\", backgroundColor:\"transparent\"}} onPress={()=>{setplacer(true),setblur(!blur)}}>\n<Text>{term}</Text>\n</TouchableOpacity> */}\n                {term !== null ? (\n                  <View\n                    style={{\n                      width: \"97%\",\n                      alignItems: \"center\",\n                      backgroundColor: \"#fff\",\n                      borderRadius: 10,\n                      margin: 5,\n                    }}\n                  >\n                    <View\n                      style={{\n                        width: \"100%\",\n                        alignItems: \"flex-start\",\n                        padding: 5,\n                        marginBottom: 10,\n                        marginTop: 5,\n                      }}\n                    >\n                      {filteredCrops.length > 0 ? (\n                        <Text\n                          style={{\n                            marginLeft: 20,\n                            fontSize: 15,\n                            fontWeight: \"600\",\n                          }}\n                        >\n                          Available Crops\n                        </Text>\n                      ) : (\n                        <Text\n                          style={{\n                            marginLeft: 20,\n                            fontSize: 15,\n                            fontWeight: \"600\",\n                            alignSelf: \"center\",\n                          }}\n                        >\n                          🤔 ....That seems to be missing...\n                        </Text>\n                      )}\n                    </View>\n\n                    {filteredCrops.map((item, cIndex) => {\n                      return (\n                        <View\n                          style={{\n                            width:\n                              windowWidth > 768\n                                ? Dimensions.get(\"window\").width - 80\n                                : Dimensions.get(\"window\").width - 50,\n                            height: 45,\n                            padding: 5,\n                            borderRadius: 8,\n                            flexDirection: \"row\",\n                            alignItems: \"center\",\n                            justifyContent: \"space-between\",\n                            backgroundColor: \"#fff\",\n                            margin: 2,\n                          }}\n                        >\n                          <TouchableOpacity\n                            onPress={() => {\n                              setplacer(true),\n                                setblur(!blur),\n                                setterm(item.name);\n                            }}\n                          >\n                            <View\n                              style={{\n                                flexDirection: \"row\",\n                                alignItems: \"center\",\n                              }}\n                            >\n                              <Image\n                                source={{ uri: item.image }}\n                                style={{\n                                  height: 35,\n                                  width: 35,\n                                  borderColor: \"green\",\n                                  borderWidth: 1,\n                                  borderRadius: 35,\n                                }}\n                              />\n                              <Text style={{ fontSize: 20 }}> {item.name}</Text>\n                              <Text\n                                style={{\n                                  fontSize: 15,\n                                  alignSelf: \"center\",\n                                  color: \"#989898\",\n                                }}\n                              >\n                                {\" \"}\n                                in{\" \"}\n                              </Text>\n                              <Text style={{ fontSize: 15 }}>{item.type}</Text>\n                            </View>\n                          </TouchableOpacity>\n                          <TouchableOpacity\n                            style={{\n                              backgroundColor: \"#3ECF8E\",\n                              height: \"100%\",\n                              alignItems: \"center\",\n                              justifyContent: \"center\",\n                              padding: 5,\n                              borderRadius: 5,\n                              alignSelf: \"flex-end\",\n                            }}\n                            onPress={() => {\n                              setparent(!parent),\n                                setterm(item.type),\n                                setplacer(!placer),\n                                setblur(!blur);\n                            }} //true\n                          >\n                            <Text style={{ fontSize: 15, color: \"#fff\" }}>\n                              View {item.type}s\n                            </Text>\n                          </TouchableOpacity>\n                        </View>\n                      );\n                    })}\n                  </View>\n                ) : null}\n              </View>\n            </View>\n\n            <KeyboardAvoidingView>\n              <FloatingAction\n                position=\"center\"\n                overlayColor=\"transparent\"\n                color=\"#3A48ED\"\n                floatingIcon={React.cloneElement(\n                  <SimpleLineIcons name=\"close\" color=\"#fff\" size={30} />\n                )}\n                onPressMain={() => navigation.navigate(\"Home\")}\n              />\n            </KeyboardAvoidingView>\n          </BlurView>\n        </View>\n      ) : null}\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n});\n","import { StatusBar } from \"expo-status-bar\";\nimport React, { useState } from \"react\";\nimport {\n  Button,\n  Dimensions,\n  StyleSheet,\n  Text,\n  TextInput,\n  View,\n  TouchableOpacity,\n  KeyboardAvoidingView,\n  Platform,\n} from \"react-native\";\nimport Data from \"../krisearch_alpha/src/data/items.json\";\nimport Farmer from \"../krisearch_alpha/src/data/farmers.json\";\n\nimport { Modal } from \"./src/components/Modal\";\nimport { BlurView } from \"expo-blur\";\nimport SearchBar from \"./src/components/SearchBar\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\nimport { Home } from \"./src/screens/HomeScreen\";\nimport { Feather, SimpleLineIcons } from \"@expo/vector-icons\";\nimport { Profile } from \"./src/screens/ProfileScreen\";\nimport { Search } from \"./src/screens/SearchScreen\";\nimport { FAB } from \"./src/components/FAB\";\nimport { FloatingAction } from \"react-native-floating-action\";\nimport homeStack from \"./src/routes/homeStack\";\n\nconst Tab = createBottomTabNavigator();\nconst Stack = createStackNavigator();\n\nconst windowWidth = Dimensions.get(\"window\").width;\nconst windowHeight = Dimensions.get(\"window\").height;\n\nfunction MyTabBar({ state, descriptors, navigation }) {\n  const focusedOptions = descriptors[state.routes[state.index].key].options;\n\n  if (focusedOptions.tabBarVisible === false) {\n    return null;\n  }\n\n  return (\n    <View style={{ flexDirection: \"row\" }}>\n      {state.routes.map((route, index) => {\n        const { options } = descriptors[route.key];\n        const label =\n          options.tabBarLabel !== undefined\n            ? options.tabBarLabel\n            : options.title !== undefined\n            ? options.title\n            : route.name;\n\n        const isFocused = state.index === index;\n\n        const onPress = () => {\n          const event = navigation.emit({\n            type: \"tabPress\",\n            target: route.key,\n            canPreventDefault: true,\n          });\n\n          if (!isFocused && !event.defaultPrevented) {\n            navigation.navigate(route.name);\n          }\n        };\n\n        const onLongPress = () => {\n          navigation.emit({\n            type: \"tabLongPress\",\n            target: route.key,\n          });\n        };\n\n        return (\n          <TouchableOpacity\n            accessibilityRole=\"button\"\n            accessibilityState={isFocused ? { selected: true } : {}}\n            accessibilityLabel={options.tabBarAccessibilityLabel}\n            testID={options.tabBarTestID}\n            onPress={onPress}\n            onLongPress={onLongPress}\n            style={{\n              flex: 1,\n              backgroundColor: windowWidth > 767 ? \"#EAEAFF\" : \"white\",\n              alignItems: \"center\",\n              justifyContent: \"center\",\n              height: 25,\n            }}\n          ></TouchableOpacity>\n        );\n      })}\n    </View>\n  );\n}\n\n// function HomeTabs() {\n//   return (\n//     <Tab.Navigator\n//     tabBar={props => <MyTabBar {...props}/>}\n//     tabBarOptions={{ showLabel: false }}\n//     >\n//       <Tab.Screen name=\"Home\" component={Home} />\n//       <Tab.Screen name=\"Profile\" component={Profile} />\n//     </Tab.Navigator>\n//   );\n// }\nfunction HomeTabs() {\n  return (\n    <Tab.Navigator\n      screenOptions={({ route }) => ({\n        tabBarIcon: ({ focused, color, size }) => {\n          let iconName;\n\n          if (route.name === \"Home\") {\n            iconName = focused ? \"home\" : \"home\";\n          } else if (route.name === \"Profile\") {\n            iconName = focused ? \"user\" : \"user\";\n          }\n\n          // You can return any component that you like here!\n          return <Feather name={iconName} size={25} color={color} />;\n        },\n      })}\n      tabBarOptions={{\n        activeTintColor: \"#8790FF\",\n        inactiveTintColor: \"gray\",\n        showLabel: false,\n        style: {\n          height: 43,\n          width: windowWidth > 767 ? 90 : \"100%\",\n          bottom: windowWidth > 767 ? \"96%\" : 0,\n          backgroundColor: windowWidth > 767 ? \"#EAEAFF\" : \"#fff\",\n          shadowColor: \"#98A0FF\",\n          shadowOffset: {\n            width: 0,\n            height: -2,\n          },\n          shadowOpacity: 0.2,\n          shadowRadius: 5.46,\n\n          elevation: 9,\n        },\n      }}\n    >\n      <Tab.Screen name=\"Home\" component={Home} />\n      <Tab.Screen name=\"Profile\" component={Profile} />\n    </Tab.Navigator>\n  );\n}\n\nexport default function App({ navigation }) {\n  const [darkenbg, setdarkenbg] = useState(false);\n  const [hider, sethider] = useState(false);\n\n  return (\n    // <View style={styles.container}>\n    //   <Text>Open up App.tsx to start working on your app!</Text>\n    //   <Button title=\"click me\" onPress={()=>myfunc()}>\n\n    //   </Button>\n\n    //   <TextInput style={{width:\"100%\", backgroundColor:\"yellow\", height:50}} placeholder=\"Enter details\" onChangeText={(text)=>searchFarmers(text)}>\n\n    //   </TextInput>\n\n    //   <StatusBar style=\"auto\" />\n    // </View>\n\n    <NavigationContainer\n      linking={{\n        prefixes: [\"rne://127.0.0.1:19006/--/\"],\n        config: {\n          screens: {\n            Root: {\n              path: \"/\",\n              initialRouteName: \"/\",\n              screens: {\n                Home: \"/\",\n                Details: \"/details\",\n                Search: \"/search\",\n              },\n            },\n          },\n        },\n      }}\n      fallback={<Text>Loading...</Text>}\n    >\n      {/* <Button title =\"GO CORONA GO\" onPress={()=>navigation.navigate('Profile')}/> */}\n      <Stack.Navigator\n        screenOptions={{\n          headerShown: false,\n        }}\n      >\n        <Stack.Screen name=\"Home\" component={HomeTabs} />\n        <Stack.Screen name=\"Search\" component={Search} />\n      </Stack.Navigator>\n\n      {/* <FloatingAction overlayColor='none' buttonSize={70} showBackground onPressMain={()=>alert('PRessed')} position=\"center\" color=\"#fff\" floatingIcon={\n\n        <TouchableOpacity style={{backgroundColor:darkenbg?\"#3A48ED\":\"#fff\", width:\"100%\", height:\"100%\",alignItems:\"center\",justifyContent:\"center\", borderColor:\"#8790FF\", borderWidth:2,borderRadius:\"100%\"}}\n        \n        onPress={()=>setdarkenbg(!darkenbg)}\n        >\n   {!darkenbg?(\n              <SimpleLineIcons name=\"magnifier\" size={30} color=\"#3A48ED\"/>\n            ):(\n              <SimpleLineIcons name=\"close\" size={30} color=\"#fff\"/>\n            )}\n        </TouchableOpacity>\n      } /> */}\n      {/* <TouchableOpacity style={{height:80, width:80, alignItems:\"center\",justifyContent:\"center\",borderWidth:2, borderRadius:80,borderColor:darkenbg?\"#fff\":\"#8790FF\" ,backgroundColor:darkenbg?\"#3A48ED\":\"#fff\", position:\"absolute\",bottom:7, alignSelf:\"center\", zIndex:999}} onPress={()=>setdarkenbg(!darkenbg)}>\n          <View>\n            {!darkenbg?(\n              <SimpleLineIcons name=\"magnifier\" size={30} color=\"#3A48ED\"/>\n            ):(\n              <SimpleLineIcons name=\"close\" size={30} color=\"#fff\"/>\n            )}\n            \n          </View>\n          </TouchableOpacity>\n          {darkenbg?(\n      <View style={{width:\"100%\", height:\"100%\",backgroundColor: 'rgba(0, 0, 0, 0.65)', position:\"absolute\"}}> \n       <BlurView tint=\"dark\" intensity={40} style={[StyleSheet.absoluteFill, styles.nonBlurredContent]}>\n        <View style={{marginTop:20,padding:5, height:\"100%\"}}>\n\n          <SearchBar visible={darkenbg} />\n        </View>\n      </BlurView>\n      </View>\n     \n    ):null} */}\n      {/* <TouchableOpacity style={{height:80, width:80, alignItems:\"center\",justifyContent:\"center\",borderWidth:2, borderRadius:80,borderColor:!hider?\"#fff\":\"#8790FF\" ,backgroundColor:hider?\"#fff\":\"#3A48ED\", position:\"absolute\",bottom:7, alignSelf:\"center\", zIndex:999}} onPress={()=>sethider(!hider)}>\n    <View>\n            {hider?(\n              <SimpleLineIcons name=\"magnifier\" size={30} color=\"#3A48ED\"/>\n            ):(\n              <SimpleLineIcons name=\"close\" size={30} color=\"#fff\"/>\n            )}\n            \n          </View>\n          </TouchableOpacity> */}\n    </NavigationContainer>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n});\n","module.exports = __webpack_public_path__ + \"static/media/newlogo.a840e510.png\";"],"sourceRoot":""}